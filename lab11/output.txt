verilator --lint-only -Wno-MULTITOP top.sv
========================================
Compiling and verifying lunarlander...
yosys -p "read_verilog -sv -noblackbox ice40hx8k.sv top.sv uart/uart.v uart/uart_tx.v uart/uart_rx.v; synth_ice40 -top lunarlander; write_verilog build/ll.v"

 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40hx8k.sv top.sv uart/uart.v uart/uart_tx.v uart/uart_rx.v; synth_ice40 -top lunarlander; write_verilog build/ll.v' --

1. Executing Verilog-2005 frontend: ice40hx8k.sv
Parsing SystemVerilog input from `ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\lunarlander'.
Generating RTLIL representation for module `\ll_display'.
Generating RTLIL representation for module `\ll_memory'.
Generating RTLIL representation for module `\ll_alu'.
Generating RTLIL representation for module `\ll_control'.
Generating RTLIL representation for module `\fa'.
Generating RTLIL representation for module `\fa4'.
Generating RTLIL representation for module `\bcdadd1'.
Generating RTLIL representation for module `\bcdadd4'.
Generating RTLIL representation for module `\bcd9comp1'.
Generating RTLIL representation for module `\bcdaddsub4'.
Generating RTLIL representation for module `\keysync'.
Generating RTLIL representation for module `\clock_psc'.
Generating RTLIL representation for module `\ssdec'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: uart/uart.v
Parsing SystemVerilog input from `uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: uart/uart_tx.v
Parsing SystemVerilog input from `uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: uart/uart_rx.v
Parsing SystemVerilog input from `uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

6. Executing SYNTH_ICE40 pass.

6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

6.2. Executing HIERARCHY pass (managing design hierarchy).

6.2.1. Analyzing design hierarchy..
Top module:  \lunarlander
Used module:     \ll_display
Used module:         \ssdec
Used module:         \bcdaddsub4
Used module:             \bcdadd4
Used module:                 \bcdadd1
Used module:                     \fa4
Used module:                         \fa
Used module:             \bcd9comp1
Used module:     \ll_control
Used module:     \ll_memory
Used module:     \ll_alu
Used module:     \keysync
Used module:     \clock_psc

6.2.2. Analyzing design hierarchy..
Top module:  \lunarlander
Used module:     \ll_display
Used module:         \ssdec
Used module:         \bcdaddsub4
Used module:             \bcdadd4
Used module:                 \bcdadd1
Used module:                     \fa4
Used module:                         \fa
Used module:             \bcd9comp1
Used module:     \ll_control
Used module:     \ll_memory
Used module:     \ll_alu
Used module:     \keysync
Used module:     \clock_psc
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removing unused module `\uart'.
Removing unused module `\top'.
Removing unused module `\reset_on_start'.
Removing unused module `\ice40hx8k'.
Removed 6 unused modules.
Warning: Resizing cell port ll_control.add.op from 32 bits to 1 bits.
Warning: Resizing cell port ll_alu.fuel_c.op from 32 bits to 1 bits.
Warning: Resizing cell port ll_alu.vel_c_b.op from 32 bits to 1 bits.
Warning: Resizing cell port ll_alu.vel_c_a.op from 32 bits to 1 bits.
Warning: Resizing cell port ll_alu.vel_c_step.op from 32 bits to 1 bits.
Warning: Resizing cell port ll_alu.alt_c.op from 32 bits to 1 bits.

6.3. Executing PROC pass (convert processes to netlists).

6.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$401 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$390 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$387 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$384 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$381 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$378 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$363 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$352 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$349 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$346 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$343 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$340 in module SB_DFFSR.
Removed 1 dead cases from process $proc$top.sv:0$119 in module ssdec.
Marked 2 switch rules as full_case in process $proc$top.sv:0$119 in module ssdec.
Marked 3 switch rules as full_case in process $proc$top.sv:376$114 in module clock_psc.
Marked 1 switch rules as full_case in process $proc$top.sv:357$112 in module keysync.
Marked 1 switch rules as full_case in process $proc$top.sv:0$91 in module bcd9comp1.
Marked 3 switch rules as full_case in process $proc$top.sv:220$72 in module ll_control.
Marked 2 switch rules as full_case in process $proc$top.sv:0$60 in module ll_alu.
Marked 1 switch rules as full_case in process $proc$top.sv:169$54 in module ll_memory.
Marked 17 switch rules as full_case in process $proc$top.sv:0$36 in module ll_display.
Marked 2 switch rules as full_case in process $proc$top.sv:88$34 in module ll_display.
Marked 2 switch rules as full_case in process $proc$top.sv:42$28 in module lunarlander.
Removed a total of 1 dead cases.

6.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 15 redundant assignments.
Promoted 35 assignments to connections.

6.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$411'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$400'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$396'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$377'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$373'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$362'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$358'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$339'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$337'.
  Set init value: \Q = 1'0

6.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$387'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$381'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$349'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$343'.
Found async reset \rst in `\clock_psc.$proc$top.sv:376$114'.
Found async reset \rst in `\keysync.$proc$top.sv:357$112'.
Found async reset \rst in `\ll_control.$proc$top.sv:220$72'.
Found async reset \rst in `\ll_memory.$proc$top.sv:169$54'.
Found async reset \rst in `\ll_display.$proc$top.sv:88$34'.
Found async reset \reset in `\lunarlander.$proc$top.sv:42$28'.

6.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~45 debug messages>

6.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$411'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$401'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$400'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$396'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$390'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$387'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$384'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$381'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$378'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$377'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$376'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$374'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$373'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$363'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$362'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$358'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$352'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$349'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$346'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$343'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$340'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$339'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$338'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$337'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$336'.
Creating decoders for process `\ssdec.$proc$top.sv:0$119'.
     1/2: $2\out[6:0]
     2/2: $1\out[6:0]
Creating decoders for process `\clock_psc.$proc$top.sv:376$114'.
     1/2: $0\counter[7:0]
     2/2: $0\hzX[0:0]
Creating decoders for process `\keysync.$proc$top.sv:357$112'.
     1/2: $0\keyclk[0:0]
     2/2: $0\press_state[0:0]
Creating decoders for process `\keysync.$proc$top.sv:0$93'.
Creating decoders for process `\bcd9comp1.$proc$top.sv:0$91'.
     1/1: $1\out[3:0]
Creating decoders for process `\ll_control.$proc$top.sv:220$72'.
     1/3: $0\wen[0:0]
     2/3: $0\crash[0:0]
     3/3: $0\land[0:0]
Creating decoders for process `\ll_alu.$proc$top.sv:0$60'.
     1/6: $2\fuel_n[15:0]
     2/6: $2\vel_n[15:0]
     3/6: $2\alt_n[15:0]
     4/6: $1\fuel_n[15:0]
     5/6: $1\vel_n[15:0]
     6/6: $1\alt_n[15:0]
Creating decoders for process `\ll_memory.$proc$top.sv:169$54'.
     1/4: $0\thrust[15:0]
     2/4: $0\fuel[15:0]
     3/4: $0\vel[15:0]
     4/4: $0\alt[15:0]
Creating decoders for process `\ll_display.$proc$top.sv:0$36'.
     1/26: $17\en[3:0]
     2/26: $16\en[3:0]
     3/26: $15\en[3:0]
     4/26: $5\info[55:0]
     5/26: $14\en[3:0]
     6/26: $4\num_start[15:0]
     7/26: $13\en[3:0]
     8/26: $12\en[3:0]
     9/26: $11\en[3:0]
    10/26: $10\en[3:0]
    11/26: $9\en[3:0]
    12/26: $8\en[3:0]
    13/26: $4\info[55:0]
    14/26: $7\en[3:0]
    15/26: $3\info[55:0]
    16/26: $6\en[3:0]
    17/26: $3\num_start[15:0]
    18/26: $5\en[3:0]
    19/26: $4\en[3:0]
    20/26: $3\en[3:0]
    21/26: $2\info[55:0]
    22/26: $2\en[3:0]
    23/26: $2\num_start[15:0]
    24/26: $1\info[55:0]
    25/26: $1\en[3:0]
    26/26: $1\num_start[15:0]
Creating decoders for process `\ll_display.$proc$top.sv:88$34'.
     1/1: $0\n_disp[3:0]
Creating decoders for process `\lunarlander.$proc$top.sv:42$28'.
     1/1: $0\thrust_n[15:0]

6.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ssdec.\out' from process `\ssdec.$proc$top.sv:0$119'.
No latch inferred for signal `\keysync.\keyout' from process `\keysync.$proc$top.sv:0$93'.
No latch inferred for signal `\bcd9comp1.\out' from process `\bcd9comp1.$proc$top.sv:0$91'.
No latch inferred for signal `\ll_alu.\alt_n' from process `\ll_alu.$proc$top.sv:0$60'.
No latch inferred for signal `\ll_alu.\vel_n' from process `\ll_alu.$proc$top.sv:0$60'.
No latch inferred for signal `\ll_alu.\fuel_n' from process `\ll_alu.$proc$top.sv:0$60'.
No latch inferred for signal `\ll_display.\en' from process `\ll_display.$proc$top.sv:0$36'.
No latch inferred for signal `\ll_display.\info' from process `\ll_display.$proc$top.sv:0$36'.
No latch inferred for signal `\ll_display.\num_start' from process `\ll_display.$proc$top.sv:0$36'.

6.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408'.
  created $adff cell `$procdff$989' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$401'.
  created $dff cell `$procdff$990' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397'.
  created $adff cell `$procdff$991' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$390'.
  created $dff cell `$procdff$992' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$387'.
  created $adff cell `$procdff$993' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$384'.
  created $dff cell `$procdff$994' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$381'.
  created $adff cell `$procdff$995' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$378'.
  created $dff cell `$procdff$996' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$376'.
  created $dff cell `$procdff$997' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$374'.
  created $dff cell `$procdff$998' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370'.
  created $adff cell `$procdff$999' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$363'.
  created $dff cell `$procdff$1000' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359'.
  created $adff cell `$procdff$1001' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$352'.
  created $dff cell `$procdff$1002' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$349'.
  created $adff cell `$procdff$1003' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$346'.
  created $dff cell `$procdff$1004' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$343'.
  created $adff cell `$procdff$1005' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$340'.
  created $dff cell `$procdff$1006' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$338'.
  created $dff cell `$procdff$1007' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$336'.
  created $dff cell `$procdff$1008' with positive edge clock.
Creating register for signal `\clock_psc.\hzX' using process `\clock_psc.$proc$top.sv:376$114'.
  created $adff cell `$procdff$1009' with positive edge clock and positive level reset.
Creating register for signal `\clock_psc.\counter' using process `\clock_psc.$proc$top.sv:376$114'.
  created $adff cell `$procdff$1010' with positive edge clock and positive level reset.
Creating register for signal `\keysync.\keyclk' using process `\keysync.$proc$top.sv:357$112'.
  created $adff cell `$procdff$1011' with positive edge clock and positive level reset.
Creating register for signal `\keysync.\press_state' using process `\keysync.$proc$top.sv:357$112'.
  created $adff cell `$procdff$1012' with positive edge clock and positive level reset.
Creating register for signal `\ll_control.\land' using process `\ll_control.$proc$top.sv:220$72'.
  created $adff cell `$procdff$1013' with positive edge clock and positive level reset.
Creating register for signal `\ll_control.\crash' using process `\ll_control.$proc$top.sv:220$72'.
  created $adff cell `$procdff$1014' with positive edge clock and positive level reset.
Creating register for signal `\ll_control.\wen' using process `\ll_control.$proc$top.sv:220$72'.
  created $adff cell `$procdff$1015' with positive edge clock and positive level reset.
Creating register for signal `\ll_memory.\alt' using process `\ll_memory.$proc$top.sv:169$54'.
  created $adff cell `$procdff$1016' with positive edge clock and positive level reset.
Creating register for signal `\ll_memory.\vel' using process `\ll_memory.$proc$top.sv:169$54'.
  created $adff cell `$procdff$1017' with positive edge clock and positive level reset.
Creating register for signal `\ll_memory.\fuel' using process `\ll_memory.$proc$top.sv:169$54'.
  created $adff cell `$procdff$1018' with positive edge clock and positive level reset.
Creating register for signal `\ll_memory.\thrust' using process `\ll_memory.$proc$top.sv:169$54'.
  created $adff cell `$procdff$1019' with positive edge clock and positive level reset.
Creating register for signal `\ll_display.\n_disp' using process `\ll_display.$proc$top.sv:88$34'.
  created $adff cell `$procdff$1020' with positive edge clock and positive level reset.
Creating register for signal `\lunarlander.\thrust_n' using process `\lunarlander.$proc$top.sv:42$28'.
  created $adff cell `$procdff$1021' with positive edge clock and positive level reset.

6.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$411'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$408'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$401'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$401'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$400'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$397'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$396'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$390'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$390'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$387'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$384'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$384'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$381'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$378'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$378'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$377'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$376'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$376'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$374'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$373'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$370'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$363'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$363'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$362'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$359'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$358'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$352'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$352'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$349'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$346'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$346'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$343'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$340'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$340'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$339'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$338'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$338'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$337'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$336'.
Found and cleaned up 2 empty switches in `\ssdec.$proc$top.sv:0$119'.
Removing empty process `ssdec.$proc$top.sv:0$119'.
Found and cleaned up 2 empty switches in `\clock_psc.$proc$top.sv:376$114'.
Removing empty process `clock_psc.$proc$top.sv:376$114'.
Removing empty process `keysync.$proc$top.sv:357$112'.
Removing empty process `keysync.$proc$top.sv:0$93'.
Found and cleaned up 1 empty switch in `\bcd9comp1.$proc$top.sv:0$91'.
Removing empty process `bcd9comp1.$proc$top.sv:0$91'.
Found and cleaned up 2 empty switches in `\ll_control.$proc$top.sv:220$72'.
Removing empty process `ll_control.$proc$top.sv:220$72'.
Found and cleaned up 2 empty switches in `\ll_alu.$proc$top.sv:0$60'.
Removing empty process `ll_alu.$proc$top.sv:0$60'.
Found and cleaned up 1 empty switch in `\ll_memory.$proc$top.sv:169$54'.
Removing empty process `ll_memory.$proc$top.sv:169$54'.
Found and cleaned up 17 empty switches in `\ll_display.$proc$top.sv:0$36'.
Removing empty process `ll_display.$proc$top.sv:0$36'.
Found and cleaned up 1 empty switch in `\ll_display.$proc$top.sv:88$34'.
Removing empty process `ll_display.$proc$top.sv:88$34'.
Found and cleaned up 1 empty switch in `\lunarlander.$proc$top.sv:42$28'.
Removing empty process `lunarlander.$proc$top.sv:42$28'.
Cleaned up 47 empty switches.

6.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ssdec.
Optimizing module clock_psc.
<suppressed ~1 debug messages>
Optimizing module keysync.
Optimizing module bcdaddsub4.
Optimizing module bcd9comp1.
Optimizing module bcdadd4.
Optimizing module bcdadd1.
Optimizing module fa4.
Optimizing module fa.
Optimizing module ll_control.
<suppressed ~1 debug messages>
Optimizing module ll_alu.
<suppressed ~4 debug messages>
Optimizing module ll_memory.
Optimizing module ll_display.
<suppressed ~2 debug messages>
Optimizing module lunarlander.
<suppressed ~1 debug messages>

6.4. Executing FLATTEN pass (flatten design).
Deleting now unused module ssdec.
Deleting now unused module clock_psc.
Deleting now unused module keysync.
Deleting now unused module bcdaddsub4.
Deleting now unused module bcd9comp1.
Deleting now unused module bcdadd4.
Deleting now unused module bcdadd1.
Deleting now unused module fa4.
Deleting now unused module fa.
Deleting now unused module ll_control.
Deleting now unused module ll_alu.
Deleting now unused module ll_memory.
Deleting now unused module ll_display.
<suppressed ~32 debug messages>

6.5. Executing TRIBUF pass.

6.6. Executing DEMINOUT pass (demote inout ports to input or output).

6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~678 debug messages>

6.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 61 unused cells and 1541 unused wires.
<suppressed ~191 debug messages>

6.9. Executing CHECK pass (checking for obvious problems).
Checking module lunarlander...
Warning: Wire lunarlander.\display.out [31] is used but has no driver.
Warning: Wire lunarlander.\display.out [23] is used but has no driver.
Warning: Wire lunarlander.\display.out [15] is used but has no driver.
Warning: Wire lunarlander.\display.out [7] is used but has no driver.
Found and reported 4 problems.

6.10. Executing OPT pass (performing simple optimizations).

6.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~498 debug messages>
Removed a total of 166 cells.

6.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\calc.$procmux$641.
    dead port 1/2 on $mux $flatten\calc.$procmux$647.
    dead port 1/2 on $mux $flatten\calc.$procmux$652.
    dead port 1/2 on $mux $flatten\display.$procmux$676.
    dead port 1/2 on $mux $flatten\display.$procmux$679.
    dead port 2/2 on $mux $flatten\display.$procmux$681.
    dead port 1/2 on $mux $flatten\display.$procmux$684.
    dead port 1/2 on $mux $flatten\display.$procmux$687.
    dead port 1/2 on $mux $flatten\display.$procmux$690.
    dead port 1/2 on $mux $flatten\display.$procmux$697.
    dead port 2/2 on $mux $flatten\display.$procmux$699.
    dead port 1/2 on $mux $flatten\display.$procmux$702.
    dead port 1/2 on $mux $flatten\display.$procmux$705.
    dead port 1/2 on $mux $flatten\display.$procmux$708.
    dead port 2/2 on $mux $flatten\display.$procmux$714.
    dead port 1/2 on $mux $flatten\display.$procmux$717.
    dead port 1/2 on $mux $flatten\display.$procmux$720.
    dead port 1/2 on $mux $flatten\display.$procmux$723.
    dead port 1/2 on $mux $flatten\display.$procmux$729.
    dead port 1/2 on $mux $flatten\display.$procmux$732.
    dead port 1/2 on $mux $flatten\display.$procmux$735.
    dead port 1/2 on $mux $flatten\display.$procmux$741.
    dead port 1/2 on $mux $flatten\display.$procmux$744.
    dead port 1/2 on $mux $flatten\display.$procmux$747.
    dead port 1/2 on $mux $flatten\display.$procmux$753.
    dead port 1/2 on $mux $flatten\display.$procmux$756.
    dead port 1/2 on $mux $flatten\display.$procmux$759.
    dead port 1/2 on $mux $flatten\display.$procmux$766.
    dead port 1/2 on $mux $flatten\display.$procmux$769.
    dead port 1/2 on $mux $flatten\display.$procmux$772.
    dead port 2/2 on $mux $flatten\display.$procmux$774.
    dead port 1/2 on $mux $flatten\display.$procmux$777.
    dead port 1/2 on $mux $flatten\display.$procmux$780.
    dead port 1/2 on $mux $flatten\display.$procmux$787.
    dead port 1/2 on $mux $flatten\display.$procmux$790.
    dead port 2/2 on $mux $flatten\display.$procmux$792.
    dead port 1/2 on $mux $flatten\display.$procmux$795.
    dead port 1/2 on $mux $flatten\display.$procmux$798.
    dead port 1/2 on $mux $flatten\display.$procmux$805.
    dead port 2/2 on $mux $flatten\display.$procmux$807.
    dead port 1/2 on $mux $flatten\display.$procmux$810.
    dead port 1/2 on $mux $flatten\display.$procmux$813.
    dead port 1/2 on $mux $flatten\display.$procmux$821.
    dead port 1/2 on $mux $flatten\display.$procmux$824.
    dead port 2/2 on $mux $flatten\display.$procmux$826.
    dead port 2/2 on $mux $flatten\display.$procmux$828.
    dead port 1/2 on $mux $flatten\display.$procmux$831.
    dead port 1/2 on $mux $flatten\display.$procmux$834.
    dead port 1/2 on $mux $flatten\display.$procmux$842.
    dead port 2/2 on $mux $flatten\display.$procmux$844.
    dead port 2/2 on $mux $flatten\display.$procmux$846.
    dead port 1/2 on $mux $flatten\display.$procmux$849.
    dead port 1/2 on $mux $flatten\display.$procmux$852.
    dead port 2/2 on $mux $flatten\display.$procmux$859.
    dead port 2/2 on $mux $flatten\display.$procmux$861.
    dead port 1/2 on $mux $flatten\display.$procmux$864.
    dead port 1/2 on $mux $flatten\display.$procmux$867.
    dead port 2/2 on $mux $flatten\display.$procmux$873.
    dead port 1/2 on $mux $flatten\display.$procmux$876.
    dead port 1/2 on $mux $flatten\display.$procmux$879.
    dead port 2/2 on $mux $flatten\display.$procmux$885.
    dead port 1/2 on $mux $flatten\display.$procmux$888.
    dead port 1/2 on $mux $flatten\display.$procmux$891.
    dead port 1/2 on $mux $flatten\display.$procmux$897.
    dead port 1/2 on $mux $flatten\display.$procmux$900.
    dead port 1/2 on $mux $flatten\display.$procmux$906.
    dead port 1/2 on $mux $flatten\display.$procmux$909.
    dead port 1/2 on $mux $flatten\display.$procmux$915.
    dead port 1/2 on $mux $flatten\display.$procmux$918.
    dead port 1/2 on $mux $flatten\display.$procmux$925.
    dead port 1/2 on $mux $flatten\display.$procmux$928.
    dead port 2/2 on $mux $flatten\display.$procmux$930.
    dead port 1/2 on $mux $flatten\display.$procmux$933.
    dead port 1/2 on $mux $flatten\display.$procmux$940.
    dead port 2/2 on $mux $flatten\display.$procmux$942.
    dead port 1/2 on $mux $flatten\display.$procmux$945.
    dead port 2/2 on $mux $flatten\display.$procmux$951.
    dead port 1/2 on $mux $flatten\display.$procmux$954.
    dead port 1/2 on $mux $flatten\display.$procmux$960.
    dead port 1/2 on $mux $flatten\display.$procmux$966.
    dead port 1/2 on $mux $flatten\display.$procmux$972.
    dead port 2/2 on $mux $flatten\display.\num0.$procmux$602.
    dead port 2/2 on $mux $flatten\display.\num1.$procmux$602.
    dead port 2/2 on $mux $flatten\display.\num2.$procmux$602.
    dead port 2/2 on $mux $flatten\display.\num3.$procmux$602.
Removed 85 multiplexer ports.
<suppressed ~43 debug messages>

6.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

6.10.6. Executing OPT_DFF pass (perform DFF optimizations).

6.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 219 unused wires.
<suppressed ~21 debug messages>

6.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~1 debug messages>

6.10.9. Rerunning OPT passes. (Maybe there is more to do..)

6.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

6.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.10.13. Executing OPT_DFF pass (perform DFF optimizations).

6.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.10.16. Rerunning OPT passes. (Maybe there is more to do..)

6.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

6.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.10.20. Executing OPT_DFF pass (perform DFF optimizations).

6.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.10.23. Finished OPT passes. (There is nothing left to do.)

6.11. Executing FSM pass (extract and optimize FSM).

6.11.1. Executing FSM_DETECT pass (finding FSMs in design).

6.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.12. Executing OPT pass (performing simple optimizations).

6.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

6.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1021 ($adff) from module lunarlander (D = { 12'000000000000 \keyout [3:0] }, Q = \thrust_n).
Adding EN signal on $flatten\mem.$procdff$1019 ($adff) from module lunarlander (D = \thrust_n, Q = \mem.thrust).
Adding EN signal on $flatten\mem.$procdff$1018 ($adff) from module lunarlander (D = \mem.fuel_n, Q = \mem.fuel).
Adding EN signal on $flatten\mem.$procdff$1017 ($adff) from module lunarlander (D = \mem.vel_n, Q = \mem.vel).
Adding EN signal on $flatten\mem.$procdff$1016 ($adff) from module lunarlander (D = \mem.alt_n, Q = \mem.alt).
Adding EN signal on $flatten\display.$procdff$1020 ($adff) from module lunarlander (D = \display.disp_ctrl, Q = \display.n_disp).
Adding EN signal on $flatten\clk.$procdff$1009 ($adff) from module lunarlander (D = $flatten\clk.$not$top.sv:384$117_Y, Q = \clk.hzX).
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$1060 ($adffe) from module lunarlander.

6.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

6.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.12.9. Rerunning OPT passes. (Maybe there is more to do..)

6.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

6.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$1061 ($adffe) from module lunarlander.

6.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~60 debug messages>

6.12.16. Rerunning OPT passes. (Maybe there is more to do..)

6.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

6.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.12.20. Executing OPT_DFF pass (perform DFF optimizations).

6.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

6.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.12.23. Rerunning OPT passes. (Maybe there is more to do..)

6.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

6.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.12.27. Executing OPT_DFF pass (perform DFF optimizations).

6.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.12.30. Finished OPT passes. (There is nothing left to do.)

6.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\fuel_c.\comp0.$auto$mem.cc:328:emit$555 ($flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\fuel_c.\comp1.$auto$mem.cc:328:emit$555 ($flatten\calc.\fuel_c.\comp1.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\fuel_c.\comp2.$auto$mem.cc:328:emit$555 ($flatten\calc.\fuel_c.\comp2.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\fuel_c.\comp3.$auto$mem.cc:328:emit$555 ($flatten\calc.\fuel_c.\comp3.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\vel_c_step.\comp0.$auto$mem.cc:328:emit$555 ($flatten\calc.\vel_c_step.\comp0.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\vel_c_step.\comp1.$auto$mem.cc:328:emit$555 ($flatten\calc.\vel_c_step.\comp1.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\vel_c_step.\comp2.$auto$mem.cc:328:emit$555 ($flatten\calc.\vel_c_step.\comp2.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\calc.\vel_c_step.\comp3.$auto$mem.cc:328:emit$555 ($flatten\calc.\vel_c_step.\comp3.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\negnum.\comp0.$auto$mem.cc:328:emit$555 ($flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\negnum.\comp1.$auto$mem.cc:328:emit$555 ($flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\negnum.\comp2.$auto$mem.cc:328:emit$555 ($flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\negnum.\comp3.$auto$mem.cc:328:emit$555 ($flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\num0.$auto$mem.cc:328:emit$551 ($flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\num1.$auto$mem.cc:328:emit$551 ($flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\num2.$auto$mem.cc:328:emit$551 ($flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549).
Removed top 28 address bits (of 32) from memory init port lunarlander.$flatten\display.\num3.$auto$mem.cc:328:emit$551 ($flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549).
Removed top 31 bits (of 32) from port B of cell lunarlander.$flatten\clk.$add$top.sv:387$118 ($add).
Removed top 24 bits (of 32) from port Y of cell lunarlander.$flatten\clk.$add$top.sv:387$118 ($add).
Removed top 3 bits (of 8) from port B of cell lunarlander.$flatten\clk.$eq$top.sv:382$116 ($eq).
Removed top 17 bits (of 32) from port B of cell lunarlander.$flatten\calc.$gt$top.sv:201$65 ($gt).
Removed top 16 bits (of 32) from port B of cell lunarlander.$flatten\cont.$lt$top.sv:228$77 ($lt).
Removed top 17 bits (of 32) from port B of cell lunarlander.$flatten\cont.$gt$top.sv:228$76 ($gt).
Removed top 17 bits (of 32) from port B of cell lunarlander.$flatten\cont.$gt$top.sv:227$74 ($gt).
Removed top 24 bits (of 56) from mux cell lunarlander.$flatten\display.$procmux$871 ($mux).
Removed top 4 bits (of 56) from mux cell lunarlander.$flatten\display.$procmux$726 ($mux).
Removed top 19 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:145$53 ($lt).
Removed top 23 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:143$52 ($lt).
Removed top 27 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:141$51 ($lt).
Removed top 19 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:132$49 ($lt).
Removed top 23 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:130$48 ($lt).
Removed top 27 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:128$47 ($lt).
Removed top 16 bits (of 32) from port B of cell lunarlander.$flatten\display.$gt$top.sv:121$46 ($gt).
Removed top 16 bits (of 32) from port B of cell lunarlander.$flatten\display.$gt$top.sv:119$45 ($gt).
Removed top 16 bits (of 32) from port B of cell lunarlander.$flatten\display.$gt$top.sv:117$44 ($gt).
Removed top 1 bits (of 4) from port B of cell lunarlander.$flatten\display.$eq$top.sv:114$42 ($eq).
Removed top 19 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:108$41 ($lt).
Removed top 23 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:106$40 ($lt).
Removed top 27 bits (of 32) from port B of cell lunarlander.$flatten\display.$lt$top.sv:104$39 ($lt).
Removed top 2 bits (of 4) from port B of cell lunarlander.$flatten\display.$eq$top.sv:102$38 ($eq).
Removed top 3 bits (of 4) from port B of cell lunarlander.$flatten\display.$eq$top.sv:98$37 ($eq).
Removed top 24 bits (of 32) from wire lunarlander.$flatten\clk.$add$top.sv:387$118_Y.
Removed top 24 bits (of 56) from wire lunarlander.$flatten\display.$4\info[55:0].
Removed top 4 bits (of 56) from wire lunarlander.$flatten\display.$5\info[55:0].
Removed top 12 bits (of 16) from wire lunarlander.thrust_n.

6.14. Executing PEEPOPT pass (run peephole optimizers).

6.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

6.16. Executing SHARE pass (SAT-based resource sharing).
Found 9 cells in module lunarlander that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\display.\num3.$auto$mem.cc:282:emit$550 ($memrd_v2):
    Found 4 activation_patterns using ctrl signal { \display.en [3] $flatten\display.$eq$top.sv:98$37_Y $flatten\display.$eq$top.sv:102$38_Y $flatten\display.$eq$top.sv:114$42_Y \mem.vel [15] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\num2.$auto$mem.cc:282:emit$550 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \display.en [2].
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\num1.$auto$mem.cc:282:emit$550 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \display.en [1].
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\num0.$auto$mem.cc:282:emit$550 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \display.en [0].
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\negnum.\comp3.$auto$mem.cc:282:emit$554 ($memrd_v2):
    Found 2 activation_patterns using ctrl signal { $flatten\display.$logic_and$top.sv:77$32_Y \display.negnum.adder.bcd3.corrected.fa1.b }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\negnum.\comp2.$auto$mem.cc:282:emit$554 ($memrd_v2):
    Found 3 activation_patterns using ctrl signal { $flatten\display.$logic_and$top.sv:77$32_Y \display.negnum.adder.bcd2.corrected.fa1.b \display.negnum.adder.bcd3.corrected.fa1.b }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\negnum.\comp1.$auto$mem.cc:282:emit$554 ($memrd_v2):
    Found 4 activation_patterns using ctrl signal { $flatten\display.$logic_and$top.sv:77$32_Y \display.negnum.adder.bcd1.corrected.fa1.b \display.negnum.adder.bcd2.corrected.fa1.b \display.negnum.adder.bcd3.corrected.fa1.b }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.\negnum.\comp0.$auto$mem.cc:282:emit$554 ($memrd_v2):
    Found 5 activation_patterns using ctrl signal { $flatten\display.$logic_and$top.sv:77$32_Y \display.negnum.adder.bcd0.corrected.fa1.b \display.negnum.adder.bcd1.corrected.fa1.b \display.negnum.adder.bcd2.corrected.fa1.b \display.negnum.adder.bcd3.corrected.fa1.b }.
    No candidates found.
  Analyzing resource sharing options for $flatten\calc.\fuel_c.\comp0.$auto$mem.cc:282:emit$554 ($memrd_v2):
    Cell is always active. Therefore no sharing is possible.

6.17. Executing TECHMAP pass (map to technology primitives).

6.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~218 debug messages>

6.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module lunarlander:
  creating $macc model for $flatten\clk.$add$top.sv:387$118 ($add).
  creating $alu model for $macc $flatten\clk.$add$top.sv:387$118.
  creating $alu model for $flatten\calc.$gt$top.sv:201$65 ($gt): new $alu
  creating $alu model for $flatten\cont.$gt$top.sv:227$74 ($gt): new $alu
  creating $alu model for $flatten\cont.$gt$top.sv:228$76 ($gt): new $alu
  creating $alu model for $flatten\cont.$lt$top.sv:228$77 ($lt): new $alu
  creating $alu model for $flatten\display.$gt$top.sv:117$44 ($gt): new $alu
  creating $alu model for $flatten\display.$gt$top.sv:119$45 ($gt): new $alu
  creating $alu model for $flatten\display.$gt$top.sv:121$46 ($gt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:104$39 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:106$40 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:108$41 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:128$47 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:130$48 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:132$49 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:141$51 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:143$52 ($lt): new $alu
  creating $alu model for $flatten\display.$lt$top.sv:145$53 ($lt): new $alu
  creating $alu cell for $flatten\display.$lt$top.sv:145$53: $auto$alumacc.cc:485:replace_alu$1090
  creating $alu cell for $flatten\display.$lt$top.sv:143$52: $auto$alumacc.cc:485:replace_alu$1101
  creating $alu cell for $flatten\display.$lt$top.sv:141$51: $auto$alumacc.cc:485:replace_alu$1112
  creating $alu cell for $flatten\display.$lt$top.sv:132$49: $auto$alumacc.cc:485:replace_alu$1123
  creating $alu cell for $flatten\display.$lt$top.sv:130$48: $auto$alumacc.cc:485:replace_alu$1134
  creating $alu cell for $flatten\display.$lt$top.sv:128$47: $auto$alumacc.cc:485:replace_alu$1145
  creating $alu cell for $flatten\display.$lt$top.sv:108$41: $auto$alumacc.cc:485:replace_alu$1156
  creating $alu cell for $flatten\display.$lt$top.sv:106$40: $auto$alumacc.cc:485:replace_alu$1167
  creating $alu cell for $flatten\display.$lt$top.sv:104$39: $auto$alumacc.cc:485:replace_alu$1178
  creating $alu cell for $flatten\display.$gt$top.sv:121$46: $auto$alumacc.cc:485:replace_alu$1189
  creating $alu cell for $flatten\display.$gt$top.sv:119$45: $auto$alumacc.cc:485:replace_alu$1200
  creating $alu cell for $flatten\display.$gt$top.sv:117$44: $auto$alumacc.cc:485:replace_alu$1211
  creating $alu cell for $flatten\cont.$lt$top.sv:228$77: $auto$alumacc.cc:485:replace_alu$1222
  creating $alu cell for $flatten\cont.$gt$top.sv:228$76: $auto$alumacc.cc:485:replace_alu$1227
  creating $alu cell for $flatten\cont.$gt$top.sv:227$74: $auto$alumacc.cc:485:replace_alu$1232
  creating $alu cell for $flatten\calc.$gt$top.sv:201$65: $auto$alumacc.cc:485:replace_alu$1237
  creating $alu cell for $flatten\clk.$add$top.sv:387$118: $auto$alumacc.cc:485:replace_alu$1242
  created 17 $alu and 0 $macc cells.

6.21. Executing OPT pass (performing simple optimizations).

6.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~12 debug messages>

6.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

6.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.21.6. Executing OPT_DFF pass (perform DFF optimizations).

6.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 12 unused cells and 28 unused wires.
<suppressed ~13 debug messages>

6.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.21.9. Rerunning OPT passes. (Maybe there is more to do..)

6.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

6.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.21.13. Executing OPT_DFF pass (perform DFF optimizations).

6.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.21.16. Finished OPT passes. (There is nothing left to do.)

6.22. Executing MEMORY pass.

6.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

6.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

6.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

6.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\fuel_c.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\fuel_c.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\fuel_c.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\vel_c_step.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\vel_c_step.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\vel_c_step.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\calc.\vel_c_step.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no output FF found.
Checking read port `$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no output FF found.
Checking read port address `$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': address FF has async set and/or reset, not supported.
Checking read port address `$flatten\calc.\fuel_c.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\fuel_c.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\fuel_c.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\vel_c_step.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\vel_c_step.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\vel_c_step.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\calc.\vel_c_step.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no address FF found.
Checking read port address `$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549'[0] in module `\lunarlander': no address FF found.

6.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

6.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory lunarlander.$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\fuel_c.\comp1.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\fuel_c.\comp2.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\fuel_c.\comp3.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\vel_c_step.\comp0.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\vel_c_step.\comp1.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\vel_c_step.\comp2.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\calc.\vel_c_step.\comp3.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553
using FF mapping for memory lunarlander.$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549
using FF mapping for memory lunarlander.$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549
using FF mapping for memory lunarlander.$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549
using FF mapping for memory lunarlander.$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549
<suppressed ~224 debug messages>

6.25. Executing TECHMAP pass (map to technology primitives).

6.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

6.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

6.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.26. Executing ICE40_BRAMINIT pass.

6.27. Executing OPT pass (performing simple optimizations).

6.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~6 debug messages>

6.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.27.3. Executing OPT_DFF pass (perform DFF optimizations).

6.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 4 unused cells and 5 unused wires.
<suppressed ~5 debug messages>

6.27.5. Finished fast OPT passes.

6.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\fuel_c.\comp1.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\fuel_c.\comp2.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\fuel_c.\comp3.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\vel_c_step.\comp0.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\vel_c_step.\comp1.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\vel_c_step.\comp2.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\calc.\vel_c_step.\comp3.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549 in module \lunarlander:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

6.29. Executing OPT pass (performing simple optimizations).

6.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~238 debug messages>

6.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

6.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $flatten\calc.\fuel_c.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A={ \calc.fuel_c.adder.bcd0.adder1.fa3.s \calc.fuel_c.adder.bcd0.corrected.fa2.a \calc.fuel_c.adder.bcd0.corrected.fa1.a \calc.fuel_c.adder.bcd0.adder1.fa0.s }, B={ \calc.fuel_c.adder.bcd0.corrected.fa3.s \calc.fuel_c.adder.bcd0.corrected.fa2.s \calc.fuel_c.adder.bcd0.corrected.fa1.s \calc.fuel_c.adder.bcd0.adder1.fa0.s }, Y=\calc.fuel_c.adder.bcd0.s
      New ports: A={ \calc.fuel_c.adder.bcd0.adder1.fa3.s \calc.fuel_c.adder.bcd0.corrected.fa2.a \calc.fuel_c.adder.bcd0.corrected.fa1.a }, B={ \calc.fuel_c.adder.bcd0.corrected.fa3.s \calc.fuel_c.adder.bcd0.corrected.fa2.s \calc.fuel_c.adder.bcd0.corrected.fa1.s }, Y=\calc.fuel_c.adder.bcd0.s [3:1]
      New connections: \calc.fuel_c.adder.bcd0.s [0] = \calc.fuel_c.adder.bcd0.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\fuel_c.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \calc.fuel_c.adder.bcd1.adder1.fa3.s \calc.fuel_c.adder.bcd1.corrected.fa2.a \calc.fuel_c.adder.bcd1.corrected.fa1.a \calc.fuel_c.adder.bcd1.adder1.fa0.s }, B={ \calc.fuel_c.adder.bcd1.corrected.fa3.s \calc.fuel_c.adder.bcd1.corrected.fa2.s \calc.fuel_c.adder.bcd1.corrected.fa1.s \calc.fuel_c.adder.bcd1.adder1.fa0.s }, Y=\calc.fuel_c.adder.bcd1.s
      New ports: A={ \calc.fuel_c.adder.bcd1.adder1.fa3.s \calc.fuel_c.adder.bcd1.corrected.fa2.a \calc.fuel_c.adder.bcd1.corrected.fa1.a }, B={ \calc.fuel_c.adder.bcd1.corrected.fa3.s \calc.fuel_c.adder.bcd1.corrected.fa2.s \calc.fuel_c.adder.bcd1.corrected.fa1.s }, Y=\calc.fuel_c.adder.bcd1.s [3:1]
      New connections: \calc.fuel_c.adder.bcd1.s [0] = \calc.fuel_c.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][4]$1743:
      Old ports: A=4'0001, B=4'0000, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1726
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1726 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1726 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][3]$1740:
      Old ports: A=4'0011, B=4'0010, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1724
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1724 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1724 [3:1] = 3'001
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][2]$1737:
      Old ports: A=4'0101, B=4'0100, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1723
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1723 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1723 [3:1] = 3'010
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][1]$1734:
      Old ports: A=4'0111, B=4'0110, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1721
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1721 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1721 [3:1] = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][0]$1731:
      Old ports: A=4'1001, B=4'1000, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [3:1] = 3'100
    Consolidated identical input bits for $mux cell $flatten\calc.\fuel_c.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \calc.fuel_c.adder.bcd2.adder1.fa3.s \calc.fuel_c.adder.bcd2.corrected.fa2.a \calc.fuel_c.adder.bcd2.corrected.fa1.a \calc.fuel_c.adder.bcd2.adder1.fa0.s }, B={ \calc.fuel_c.adder.bcd2.corrected.fa3.s \calc.fuel_c.adder.bcd2.corrected.fa2.s \calc.fuel_c.adder.bcd2.corrected.fa1.s \calc.fuel_c.adder.bcd2.adder1.fa0.s }, Y=\calc.fuel_c.adder.bcd2.s
      New ports: A={ \calc.fuel_c.adder.bcd2.adder1.fa3.s \calc.fuel_c.adder.bcd2.corrected.fa2.a \calc.fuel_c.adder.bcd2.corrected.fa1.a }, B={ \calc.fuel_c.adder.bcd2.corrected.fa3.s \calc.fuel_c.adder.bcd2.corrected.fa2.s \calc.fuel_c.adder.bcd2.corrected.fa1.s }, Y=\calc.fuel_c.adder.bcd2.s [3:1]
      New connections: \calc.fuel_c.adder.bcd2.s [0] = \calc.fuel_c.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][0]$1776:
      Old ports: A=4'1001, B=4'1000, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [3:1] = 3'100
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][2]$1692:
      Old ports: A=4'0101, B=4'0100, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1678
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1678 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1678 [3:1] = 3'010
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][1]$1779:
      Old ports: A=4'0111, B=4'0110, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1766
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1766 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1766 [3:1] = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][5]$1971:
      Old ports: A=7'1110111, B=7'1111100, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [0] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [6:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [2:1] } = { 4'1111 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][4]$1698:
      Old ports: A=4'0001, B=4'0000, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1681
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1681 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1681 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][3]$1695:
      Old ports: A=4'0011, B=4'0010, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1679
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1679 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1679 [3:1] = 3'001
    Consolidated identical input bits for $mux cell $flatten\calc.\fuel_c.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \calc.fuel_c.adder.bcd3.adder1.fa3.s \calc.fuel_c.adder.bcd3.corrected.fa2.a \calc.fuel_c.adder.bcd3.corrected.fa1.a \calc.fuel_c.adder.bcd3.adder1.fa0.s }, B={ \calc.fuel_c.adder.bcd3.corrected.fa3.s \calc.fuel_c.adder.bcd3.corrected.fa2.s \calc.fuel_c.adder.bcd3.corrected.fa1.s \calc.fuel_c.adder.bcd3.adder1.fa0.s }, Y=\calc.fuel_c.adder.bcd3.s
      New ports: A={ \calc.fuel_c.adder.bcd3.adder1.fa3.s \calc.fuel_c.adder.bcd3.corrected.fa2.a \calc.fuel_c.adder.bcd3.corrected.fa1.a }, B={ \calc.fuel_c.adder.bcd3.corrected.fa3.s \calc.fuel_c.adder.bcd3.corrected.fa2.s \calc.fuel_c.adder.bcd3.corrected.fa1.s }, Y=\calc.fuel_c.adder.bcd3.s [3:1]
      New connections: \calc.fuel_c.adder.bcd3.s [0] = \calc.fuel_c.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][3]$1830:
      Old ports: A=4'0011, B=4'0010, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1814
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1814 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1814 [3:1] = 3'001
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][1]$1689:
      Old ports: A=4'0111, B=4'0110, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1676
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1676 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1676 [3:1] = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][4]$1833:
      Old ports: A=4'0001, B=4'0000, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1816
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1816 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1816 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][0]$1686:
      Old ports: A=4'1001, B=4'1000, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [3:1] = 3'100
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][6]$1974:
      Old ports: A=7'0111001, B=7'1011110, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [1:0]
      New connections: $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [6:2] = { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [1:0] 2'11 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][6]$2019:
      Old ports: A=7'0111001, B=7'1011110, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [1:0]
      New connections: $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [6:2] = { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [1:0] 2'11 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][5]$1926:
      Old ports: A=7'1110111, B=7'1111100, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [0] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [6:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [2:1] } = { 4'1111 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][3]$1920:
      Old ports: A=7'1111101, B=7'0100111, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [1] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [6:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [2] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [0] } = { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][1]$2004:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [2] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [6:5] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][6]$1884:
      Old ports: A=7'0111001, B=7'1011110, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [1:0]
      New connections: $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [6:2] = { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [1:0] 2'11 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [1] }
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_a.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_a.adder.bcd0.adder1.fa3.s \calc.vel_c_a.adder.bcd0.corrected.fa2.a \calc.vel_c_a.adder.bcd0.corrected.fa1.a \calc.vel_c_a.adder.bcd0.adder1.fa0.s }, B={ \calc.vel_c_a.adder.bcd0.corrected.fa3.s \calc.vel_c_a.adder.bcd0.corrected.fa2.s \calc.vel_c_a.adder.bcd0.corrected.fa1.s \calc.vel_c_a.adder.bcd0.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd0.s
      New ports: A={ \calc.vel_c_a.adder.bcd0.adder1.fa3.s \calc.vel_c_a.adder.bcd0.corrected.fa2.a \calc.vel_c_a.adder.bcd0.corrected.fa1.a }, B={ \calc.vel_c_a.adder.bcd0.corrected.fa3.s \calc.vel_c_a.adder.bcd0.corrected.fa2.s \calc.vel_c_a.adder.bcd0.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd0.s [3:1]
      New connections: \calc.vel_c_a.adder.bcd0.s [0] = \calc.vel_c_a.adder.bcd0.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_a.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_a.adder.bcd1.adder1.fa3.s \calc.vel_c_a.adder.bcd1.corrected.fa2.a \calc.vel_c_a.adder.bcd1.corrected.fa1.a \calc.vel_c_a.adder.bcd1.adder1.fa0.s }, B={ \calc.vel_c_a.adder.bcd1.corrected.fa3.s \calc.vel_c_a.adder.bcd1.corrected.fa2.s \calc.vel_c_a.adder.bcd1.corrected.fa1.s \calc.vel_c_a.adder.bcd1.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd1.s
      New ports: A={ \calc.vel_c_a.adder.bcd1.adder1.fa3.s \calc.vel_c_a.adder.bcd1.corrected.fa2.a \calc.vel_c_a.adder.bcd1.corrected.fa1.a }, B={ \calc.vel_c_a.adder.bcd1.corrected.fa3.s \calc.vel_c_a.adder.bcd1.corrected.fa2.s \calc.vel_c_a.adder.bcd1.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd1.s [3:1]
      New connections: \calc.vel_c_a.adder.bcd1.s [0] = \calc.vel_c_a.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_a.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_a.adder.bcd2.adder1.fa3.s \calc.vel_c_a.adder.bcd2.corrected.fa2.a \calc.vel_c_a.adder.bcd2.corrected.fa1.a \calc.vel_c_a.adder.bcd2.adder1.fa0.s }, B={ \calc.vel_c_a.adder.bcd2.corrected.fa3.s \calc.vel_c_a.adder.bcd2.corrected.fa2.s \calc.vel_c_a.adder.bcd2.corrected.fa1.s \calc.vel_c_a.adder.bcd2.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd2.s
      New ports: A={ \calc.vel_c_a.adder.bcd2.adder1.fa3.s \calc.vel_c_a.adder.bcd2.corrected.fa2.a \calc.vel_c_a.adder.bcd2.corrected.fa1.a }, B={ \calc.vel_c_a.adder.bcd2.corrected.fa3.s \calc.vel_c_a.adder.bcd2.corrected.fa2.s \calc.vel_c_a.adder.bcd2.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd2.s [3:1]
      New connections: \calc.vel_c_a.adder.bcd2.s [0] = \calc.vel_c_a.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_a.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_a.adder.bcd3.adder1.fa3.s \calc.vel_c_a.adder.bcd3.corrected.fa2.a \calc.vel_c_a.adder.bcd3.corrected.fa1.a \calc.vel_c_a.adder.bcd3.adder1.fa0.s }, B={ \calc.vel_c_a.adder.bcd3.corrected.fa3.s \calc.vel_c_a.adder.bcd3.corrected.fa2.s \calc.vel_c_a.adder.bcd3.corrected.fa1.s \calc.vel_c_a.adder.bcd3.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd3.s
      New ports: A={ \calc.vel_c_a.adder.bcd3.adder1.fa3.s \calc.vel_c_a.adder.bcd3.corrected.fa2.a \calc.vel_c_a.adder.bcd3.corrected.fa1.a }, B={ \calc.vel_c_a.adder.bcd3.corrected.fa3.s \calc.vel_c_a.adder.bcd3.corrected.fa2.s \calc.vel_c_a.adder.bcd3.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd3.s [3:1]
      New connections: \calc.vel_c_a.adder.bcd3.s [0] = \calc.vel_c_a.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_b.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A=\calc.vel_c_b.adder.bcd0.sum1, B={ \calc.vel_c_b.adder.bcd0.corrected.fa3.s \calc.vel_c_b.adder.bcd0.corrected.fa2.s \calc.vel_c_b.adder.bcd0.corrected.fa1.s \calc.vel_c_b.adder.bcd0.sum1 [0] }, Y=\calc.vel_c_b.adder.bcd0.s
      New ports: A=\calc.vel_c_b.adder.bcd0.sum1 [3:1], B={ \calc.vel_c_b.adder.bcd0.corrected.fa3.s \calc.vel_c_b.adder.bcd0.corrected.fa2.s \calc.vel_c_b.adder.bcd0.corrected.fa1.s }, Y=\calc.vel_c_b.adder.bcd0.s [3:1]
      New connections: \calc.vel_c_b.adder.bcd0.s [0] = \calc.vel_c_b.adder.bcd0.sum1 [0]
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_b.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_b.adder.bcd1.adder1.fa3.s \calc.vel_c_b.adder.bcd1.corrected.fa2.a \calc.vel_c_b.adder.bcd1.corrected.fa1.a \calc.vel_c_b.adder.bcd1.adder1.fa0.s }, B={ \calc.vel_c_b.adder.bcd1.corrected.fa3.s \calc.vel_c_b.adder.bcd1.corrected.fa2.s \calc.vel_c_b.adder.bcd1.corrected.fa1.s \calc.vel_c_b.adder.bcd1.adder1.fa0.s }, Y=\calc.vel_c_b.adder.bcd1.s
      New ports: A={ \calc.vel_c_b.adder.bcd1.adder1.fa3.s \calc.vel_c_b.adder.bcd1.corrected.fa2.a \calc.vel_c_b.adder.bcd1.corrected.fa1.a }, B={ \calc.vel_c_b.adder.bcd1.corrected.fa3.s \calc.vel_c_b.adder.bcd1.corrected.fa2.s \calc.vel_c_b.adder.bcd1.corrected.fa1.s }, Y=\calc.vel_c_b.adder.bcd1.s [3:1]
      New connections: \calc.vel_c_b.adder.bcd1.s [0] = \calc.vel_c_b.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_b.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_b.adder.bcd2.adder1.fa3.s \calc.vel_c_b.adder.bcd2.corrected.fa2.a \calc.vel_c_b.adder.bcd2.corrected.fa1.a \calc.vel_c_b.adder.bcd2.adder1.fa0.s }, B={ \calc.vel_c_b.adder.bcd2.corrected.fa3.s \calc.vel_c_b.adder.bcd2.corrected.fa2.s \calc.vel_c_b.adder.bcd2.corrected.fa1.s \calc.vel_c_b.adder.bcd2.adder1.fa0.s }, Y=\calc.vel_c_b.adder.bcd2.s
      New ports: A={ \calc.vel_c_b.adder.bcd2.adder1.fa3.s \calc.vel_c_b.adder.bcd2.corrected.fa2.a \calc.vel_c_b.adder.bcd2.corrected.fa1.a }, B={ \calc.vel_c_b.adder.bcd2.corrected.fa3.s \calc.vel_c_b.adder.bcd2.corrected.fa2.s \calc.vel_c_b.adder.bcd2.corrected.fa1.s }, Y=\calc.vel_c_b.adder.bcd2.s [3:1]
      New connections: \calc.vel_c_b.adder.bcd2.s [0] = \calc.vel_c_b.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_b.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_b.adder.bcd3.adder1.fa3.s \calc.vel_c_b.adder.bcd3.corrected.fa2.a \calc.vel_c_b.adder.bcd3.corrected.fa1.a \calc.vel_c_b.adder.bcd3.adder1.fa0.s }, B={ \calc.vel_c_b.adder.bcd3.corrected.fa3.s \calc.vel_c_b.adder.bcd3.corrected.fa2.s \calc.vel_c_b.adder.bcd3.corrected.fa1.s \calc.vel_c_b.adder.bcd3.adder1.fa0.s }, Y=\calc.vel_c_b.adder.bcd3.s
      New ports: A={ \calc.vel_c_b.adder.bcd3.adder1.fa3.s \calc.vel_c_b.adder.bcd3.corrected.fa2.a \calc.vel_c_b.adder.bcd3.corrected.fa1.a }, B={ \calc.vel_c_b.adder.bcd3.corrected.fa3.s \calc.vel_c_b.adder.bcd3.corrected.fa2.s \calc.vel_c_b.adder.bcd3.corrected.fa1.s }, Y=\calc.vel_c_b.adder.bcd3.s [3:1]
      New connections: \calc.vel_c_b.adder.bcd3.s [0] = \calc.vel_c_b.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_step.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_step.adder.bcd0.adder1.fa3.s \calc.vel_c_step.adder.bcd0.corrected.fa2.a \calc.vel_c_step.adder.bcd0.corrected.fa1.a \calc.vel_c_step.adder.bcd0.adder1.fa0.s }, B={ \calc.vel_c_step.adder.bcd0.corrected.fa3.s \calc.vel_c_step.adder.bcd0.corrected.fa2.s \calc.vel_c_step.adder.bcd0.corrected.fa1.s \calc.vel_c_step.adder.bcd0.adder1.fa0.s }, Y=\calc.vel_c_b.adder.bcd0.sum1
      New ports: A={ \calc.vel_c_step.adder.bcd0.adder1.fa3.s \calc.vel_c_step.adder.bcd0.corrected.fa2.a \calc.vel_c_step.adder.bcd0.corrected.fa1.a }, B={ \calc.vel_c_step.adder.bcd0.corrected.fa3.s \calc.vel_c_step.adder.bcd0.corrected.fa2.s \calc.vel_c_step.adder.bcd0.corrected.fa1.s }, Y=\calc.vel_c_b.adder.bcd0.sum1 [3:1]
      New connections: \calc.vel_c_b.adder.bcd0.sum1 [0] = \calc.vel_c_step.adder.bcd0.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][3]$1965:
      Old ports: A=7'1111101, B=7'0100111, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [1] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [6:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [2] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [0] } = { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][4]$1968:
      Old ports: A=7'1111111, B=7'1100111, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [3]
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [6:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [2:0] } = { 2'11 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [3] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][0]$1866:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0]
      New connections: $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [6:1] = { 1'0 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][6]$1929:
      Old ports: A=7'0111001, B=7'1011110, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [1:0]
      New connections: $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [6:2] = { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [1:0] 2'11 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][1]$1959:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [2] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [6:5] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][1]$1869:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [2] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [6:5] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][2]$1962:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948 [1:0]
      New connections: $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948 [6:2] = { 3'110 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][0]$1956:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0]
      New connections: $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [6:1] = { 1'0 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][4]$2013:
      Old ports: A=7'1111111, B=7'1100111, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [3]
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [6:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [2:0] } = { 2'11 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [3] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][2]$1917:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903 [1:0]
      New connections: $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903 [6:2] = { 3'110 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903 [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_step.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_step.adder.bcd1.adder1.fa3.s \calc.vel_c_step.adder.bcd1.corrected.fa2.a \calc.vel_c_step.adder.bcd1.corrected.fa1.a \calc.vel_c_step.adder.bcd1.adder1.fa0.s }, B={ \calc.vel_c_step.adder.bcd1.corrected.fa3.s \calc.vel_c_step.adder.bcd1.corrected.fa2.s \calc.vel_c_step.adder.bcd1.corrected.fa1.s \calc.vel_c_step.adder.bcd1.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd1.a
      New ports: A={ \calc.vel_c_step.adder.bcd1.adder1.fa3.s \calc.vel_c_step.adder.bcd1.corrected.fa2.a \calc.vel_c_step.adder.bcd1.corrected.fa1.a }, B={ \calc.vel_c_step.adder.bcd1.corrected.fa3.s \calc.vel_c_step.adder.bcd1.corrected.fa2.s \calc.vel_c_step.adder.bcd1.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd1.a [3:1]
      New connections: \calc.vel_c_a.adder.bcd1.a [0] = \calc.vel_c_step.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][4]$1923:
      Old ports: A=7'1111111, B=7'1100111, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [3]
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [6:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [2:0] } = { 2'11 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [3] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][4]$1878:
      Old ports: A=7'1111111, B=7'1100111, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [3]
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [6:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [2:0] } = { 2'11 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [3] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][5]$1881:
      Old ports: A=7'1110111, B=7'1111100, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [0] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [6:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [2:1] } = { 4'1111 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][3]$1875:
      Old ports: A=7'1111101, B=7'0100111, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [1] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [6:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [2] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [0] } = { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][2]$1872:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858 [1:0]
      New connections: $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858 [6:2] = { 3'110 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858 [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_step.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_step.adder.bcd2.adder1.fa3.s \calc.vel_c_step.adder.bcd2.corrected.fa2.a \calc.vel_c_step.adder.bcd2.corrected.fa1.a \calc.vel_c_step.adder.bcd2.adder1.fa0.s }, B={ \calc.vel_c_step.adder.bcd2.corrected.fa3.s \calc.vel_c_step.adder.bcd2.corrected.fa2.s \calc.vel_c_step.adder.bcd2.corrected.fa1.s \calc.vel_c_step.adder.bcd2.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd2.a
      New ports: A={ \calc.vel_c_step.adder.bcd2.adder1.fa3.s \calc.vel_c_step.adder.bcd2.corrected.fa2.a \calc.vel_c_step.adder.bcd2.corrected.fa1.a }, B={ \calc.vel_c_step.adder.bcd2.corrected.fa3.s \calc.vel_c_step.adder.bcd2.corrected.fa2.s \calc.vel_c_step.adder.bcd2.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd2.a [3:1]
      New connections: \calc.vel_c_a.adder.bcd2.a [0] = \calc.vel_c_step.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][2]$1827:
      Old ports: A=4'0101, B=4'0100, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1813
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1813 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1813 [3:1] = 3'010
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][1]$1824:
      Old ports: A=4'0111, B=4'0110, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1811
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1811 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1811 [3:1] = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][3]$2010:
      Old ports: A=7'1111101, B=7'0100111, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [1] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [6:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [2] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [0] } = { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][2]$1782:
      Old ports: A=4'0101, B=4'0100, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1768
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1768 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1768 [3:1] = 3'010
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][2]$2007:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993 [1:0]
      New connections: $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993 [6:2] = { 3'110 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][4]$1788:
      Old ports: A=4'0001, B=4'0000, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1771
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1771 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1771 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][0]$1821:
      Old ports: A=4'1001, B=4'1000, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [3:1] = 3'100
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][3]$1785:
      Old ports: A=4'0011, B=4'0010, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1769
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1769 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1769 [3:1] = 3'001
    Consolidated identical input bits for $mux cell $flatten\calc.\vel_c_step.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \calc.vel_c_step.adder.bcd3.adder1.fa3.s \calc.vel_c_step.adder.bcd3.corrected.fa2.a \calc.vel_c_step.adder.bcd3.corrected.fa1.a \calc.vel_c_step.adder.bcd3.adder1.fa0.s }, B={ \calc.vel_c_step.adder.bcd3.corrected.fa3.s \calc.vel_c_step.adder.bcd3.corrected.fa2.s \calc.vel_c_step.adder.bcd3.corrected.fa1.s \calc.vel_c_step.adder.bcd3.adder1.fa0.s }, Y=\calc.vel_c_a.adder.bcd3.a
      New ports: A={ \calc.vel_c_step.adder.bcd3.adder1.fa3.s \calc.vel_c_step.adder.bcd3.corrected.fa2.a \calc.vel_c_step.adder.bcd3.corrected.fa1.a }, B={ \calc.vel_c_step.adder.bcd3.corrected.fa3.s \calc.vel_c_step.adder.bcd3.corrected.fa2.s \calc.vel_c_step.adder.bcd3.corrected.fa1.s }, Y=\calc.vel_c_a.adder.bcd3.a [3:1]
      New connections: \calc.vel_c_a.adder.bcd3.a [0] = \calc.vel_c_step.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][3]$1335:
      Old ports: A=4'0011, B=4'0010, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1319
      New ports: A=1'1, B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1319 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1319 [3:1] = 3'001
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][2]$1332:
      Old ports: A=4'0101, B=4'0100, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1318
      New ports: A=1'1, B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1318 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1318 [3:1] = 3'010
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][4]$1338:
      Old ports: A=4'0001, B=4'0000, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1321
      New ports: A=1'1, B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1321 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1321 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][1]$1329:
      Old ports: A=4'0111, B=4'0110, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1316
      New ports: A=1'1, B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1316 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1316 [3:1] = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][3][0]$1326:
      Old ports: A=4'1001, B=4'1000, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315
      New ports: A=1'1, B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [3:1] = 3'100
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][1]$1914:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [2] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [6:5] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][0]$1911:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0]
      New connections: $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [6:1] = { 1'0 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] 2'11 }
    Consolidated identical input bits for $mux cell $flatten\cont.\add.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A={ \calc.alt_c.adder.bcd0.adder1.fa3.s \calc.alt_c.adder.bcd0.corrected.fa2.a \calc.alt_c.adder.bcd0.corrected.fa1.a \calc.alt_c.adder.bcd0.adder1.fa0.s }, B={ \cont.add.adder.bcd0.corrected.fa3.s \cont.add.adder.bcd0.corrected.fa2.s \calc.alt_c.adder.bcd0.corrected.fa1.s \calc.alt_c.adder.bcd0.adder1.fa0.s }, Y=\cont.add.adder.bcd0.s
      New ports: A={ \calc.alt_c.adder.bcd0.adder1.fa3.s \calc.alt_c.adder.bcd0.corrected.fa2.a \calc.alt_c.adder.bcd0.corrected.fa1.a }, B={ \cont.add.adder.bcd0.corrected.fa3.s \cont.add.adder.bcd0.corrected.fa2.s \calc.alt_c.adder.bcd0.corrected.fa1.s }, Y=\cont.add.adder.bcd0.s [3:1]
      New connections: \cont.add.adder.bcd0.s [0] = \calc.alt_c.adder.bcd0.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\cont.\add.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \calc.alt_c.adder.bcd1.adder1.fa3.s \calc.alt_c.adder.bcd1.corrected.fa2.a \calc.alt_c.adder.bcd1.corrected.fa1.a \calc.alt_c.adder.bcd1.adder1.fa0.s }, B={ \calc.alt_c.adder.bcd1.corrected.fa3.s \calc.alt_c.adder.bcd1.corrected.fa2.s \calc.alt_c.adder.bcd1.corrected.fa1.s \calc.alt_c.adder.bcd1.adder1.fa0.s }, Y=\cont.add.adder.bcd1.s
      New ports: A={ \calc.alt_c.adder.bcd1.adder1.fa3.s \calc.alt_c.adder.bcd1.corrected.fa2.a \calc.alt_c.adder.bcd1.corrected.fa1.a }, B={ \calc.alt_c.adder.bcd1.corrected.fa3.s \calc.alt_c.adder.bcd1.corrected.fa2.s \calc.alt_c.adder.bcd1.corrected.fa1.s }, Y=\cont.add.adder.bcd1.s [3:1]
      New connections: \cont.add.adder.bcd1.s [0] = \calc.alt_c.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\cont.\add.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \calc.alt_c.adder.bcd2.adder1.fa3.s \calc.alt_c.adder.bcd2.corrected.fa2.a \calc.alt_c.adder.bcd2.corrected.fa1.a \calc.alt_c.adder.bcd2.adder1.fa0.s }, B={ \calc.alt_c.adder.bcd2.corrected.fa3.s \calc.alt_c.adder.bcd2.corrected.fa2.s \calc.alt_c.adder.bcd2.corrected.fa1.s \calc.alt_c.adder.bcd2.adder1.fa0.s }, Y=\cont.add.adder.bcd2.s
      New ports: A={ \calc.alt_c.adder.bcd2.adder1.fa3.s \calc.alt_c.adder.bcd2.corrected.fa2.a \calc.alt_c.adder.bcd2.corrected.fa1.a }, B={ \calc.alt_c.adder.bcd2.corrected.fa3.s \calc.alt_c.adder.bcd2.corrected.fa2.s \calc.alt_c.adder.bcd2.corrected.fa1.s }, Y=\cont.add.adder.bcd2.s [3:1]
      New connections: \cont.add.adder.bcd2.s [0] = \calc.alt_c.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\cont.\add.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \calc.alt_c.adder.bcd3.adder1.fa3.s \calc.alt_c.adder.bcd3.corrected.fa2.a \calc.alt_c.adder.bcd3.corrected.fa1.a \calc.alt_c.adder.bcd3.adder1.fa0.s }, B={ \calc.alt_c.adder.bcd3.corrected.fa3.s \calc.alt_c.adder.bcd3.corrected.fa2.s \calc.alt_c.adder.bcd3.corrected.fa1.s \calc.alt_c.adder.bcd3.adder1.fa0.s }, Y=\cont.add.adder.bcd3.s
      New ports: A={ \calc.alt_c.adder.bcd3.adder1.fa3.s \calc.alt_c.adder.bcd3.corrected.fa2.a \calc.alt_c.adder.bcd3.corrected.fa1.a }, B={ \calc.alt_c.adder.bcd3.corrected.fa3.s \calc.alt_c.adder.bcd3.corrected.fa2.s \calc.alt_c.adder.bcd3.corrected.fa1.s }, Y=\cont.add.adder.bcd3.s [3:1]
      New connections: \cont.add.adder.bcd3.s [0] = \calc.alt_c.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$673:
      Old ports: A=4'0111, B=4'1111, Y=$flatten\display.$17\en[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\display.$17\en[3:0] [3]
      New connections: $flatten\display.$17\en[3:0] [2:0] = 3'111
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$726:
      Old ports: A={ 21'10000111011001010000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, B={ 21'01110011100001111000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y=$auto$wreduce.cc:461:run$1071 [51:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:461:run$1071 [41] $auto$wreduce.cc:461:run$1071 [35] }
      New connections: { $auto$wreduce.cc:461:run$1071 [51:42] $auto$wreduce.cc:461:run$1071 [40:36] $auto$wreduce.cc:461:run$1071 [34:0] } = { $auto$wreduce.cc:461:run$1071 [41] $auto$wreduce.cc:461:run$1071 [35] $auto$wreduce.cc:461:run$1071 [35] $auto$wreduce.cc:461:run$1071 [35] 1'0 $auto$wreduce.cc:461:run$1071 [41] 2'11 $auto$wreduce.cc:461:run$1071 [35] $auto$wreduce.cc:461:run$1071 [41] 3'001 $auto$wreduce.cc:461:run$1071 [35] 5'1000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$763:
      Old ports: A=4'0111, B=4'1111, Y=$flatten\display.$13\en[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\display.$13\en[3:0] [3]
      New connections: $flatten\display.$13\en[3:0] [2:0] = 3'111
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$818:
      Old ports: A=4'0111, B=4'1111, Y=$flatten\display.$10\en[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\display.$10\en[3:0] [3]
      New connections: $flatten\display.$10\en[3:0] [2:0] = 3'111
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$871:
      Old ports: A={ 1'x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, B={ 9'01000000x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y=$auto$wreduce.cc:461:run$1070 [31:0]
      New ports: A={ 1'x \display.num3.out }, B=8'01000000, Y=$auto$wreduce.cc:461:run$1070 [31:24]
      New connections: $auto$wreduce.cc:461:run$1070 [23:0] = { 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$894:
      Old ports: A={ 4'0111 $auto$wreduce.cc:461:run$1071 [51:0] }, B={ 24'001111100111100100111000 $auto$wreduce.cc:461:run$1070 [31:0] }, Y=$flatten\display.$3\info[55:0]
      New ports: A={ 1'1 $auto$wreduce.cc:461:run$1071 [51:0] }, B={ 21'011100111100100111000 $auto$wreduce.cc:461:run$1070 [31:0] }, Y={ $flatten\display.$3\info[55:0] [54] $flatten\display.$3\info[55:0] [51:0] }
      New connections: { $flatten\display.$3\info[55:0] [55] $flatten\display.$3\info[55:0] [53:52] } = 3'011
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$922:
      Old ports: A=4'0111, B=4'1111, Y=$flatten\display.$5\en[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\display.$5\en[3:0] [3]
      New connections: $flatten\display.$5\en[3:0] [2:0] = 3'111
    Consolidated identical input bits for $mux cell $flatten\display.\negnum.\adder.\bcd0.$ternary$top.sv:286$90:
      Old ports: A={ \display.negnum.adder.bcd0.adder1.fa3.s \display.negnum.adder.bcd0.corrected.fa2.a \display.negnum.adder.bcd0.corrected.fa1.a \display.negnum.adder.bcd0.adder1.fa0.s }, B={ \display.negnum.adder.bcd0.corrected.fa3.s \display.negnum.adder.bcd0.corrected.fa2.s \display.negnum.adder.bcd0.corrected.fa1.s \display.negnum.adder.bcd0.adder1.fa0.s }, Y=\display.negnum.adder.bcd0.s
      New ports: A={ \display.negnum.adder.bcd0.adder1.fa3.s \display.negnum.adder.bcd0.corrected.fa2.a \display.negnum.adder.bcd0.corrected.fa1.a }, B={ \display.negnum.adder.bcd0.corrected.fa3.s \display.negnum.adder.bcd0.corrected.fa2.s \display.negnum.adder.bcd0.corrected.fa1.s }, Y=\display.negnum.adder.bcd0.s [3:1]
      New connections: \display.negnum.adder.bcd0.s [0] = \display.negnum.adder.bcd0.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\display.\negnum.\adder.\bcd1.$ternary$top.sv:286$90:
      Old ports: A={ \display.negnum.adder.bcd1.adder1.fa3.s \display.negnum.adder.bcd1.corrected.fa2.a \display.negnum.adder.bcd1.corrected.fa1.a \display.negnum.adder.bcd1.adder1.fa0.s }, B={ \display.negnum.adder.bcd1.corrected.fa3.s \display.negnum.adder.bcd1.corrected.fa2.s \display.negnum.adder.bcd1.corrected.fa1.s \display.negnum.adder.bcd1.adder1.fa0.s }, Y=\display.negnum.adder.bcd1.s
      New ports: A={ \display.negnum.adder.bcd1.adder1.fa3.s \display.negnum.adder.bcd1.corrected.fa2.a \display.negnum.adder.bcd1.corrected.fa1.a }, B={ \display.negnum.adder.bcd1.corrected.fa3.s \display.negnum.adder.bcd1.corrected.fa2.s \display.negnum.adder.bcd1.corrected.fa1.s }, Y=\display.negnum.adder.bcd1.s [3:1]
      New connections: \display.negnum.adder.bcd1.s [0] = \display.negnum.adder.bcd1.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\display.\negnum.\adder.\bcd2.$ternary$top.sv:286$90:
      Old ports: A={ \display.negnum.adder.bcd2.adder1.fa3.s \display.negnum.adder.bcd2.corrected.fa2.a \display.negnum.adder.bcd2.corrected.fa1.a \display.negnum.adder.bcd2.adder1.fa0.s }, B={ \display.negnum.adder.bcd2.corrected.fa3.s \display.negnum.adder.bcd2.corrected.fa2.s \display.negnum.adder.bcd2.corrected.fa1.s \display.negnum.adder.bcd2.adder1.fa0.s }, Y=\display.negnum.adder.bcd2.s
      New ports: A={ \display.negnum.adder.bcd2.adder1.fa3.s \display.negnum.adder.bcd2.corrected.fa2.a \display.negnum.adder.bcd2.corrected.fa1.a }, B={ \display.negnum.adder.bcd2.corrected.fa3.s \display.negnum.adder.bcd2.corrected.fa2.s \display.negnum.adder.bcd2.corrected.fa1.s }, Y=\display.negnum.adder.bcd2.s [3:1]
      New connections: \display.negnum.adder.bcd2.s [0] = \display.negnum.adder.bcd2.adder1.fa0.s
    Consolidated identical input bits for $mux cell $flatten\display.\negnum.\adder.\bcd3.$ternary$top.sv:286$90:
      Old ports: A={ \display.negnum.adder.bcd3.adder1.fa3.s \display.negnum.adder.bcd3.corrected.fa2.a \display.negnum.adder.bcd3.corrected.fa1.a \display.negnum.adder.bcd3.adder1.fa0.s }, B={ \display.negnum.adder.bcd3.corrected.fa3.s \display.negnum.adder.bcd3.corrected.fa2.s \display.negnum.adder.bcd3.corrected.fa1.s \display.negnum.adder.bcd3.adder1.fa0.s }, Y=\display.negnum.adder.bcd3.s
      New ports: A={ \display.negnum.adder.bcd3.adder1.fa3.s \display.negnum.adder.bcd3.corrected.fa2.a \display.negnum.adder.bcd3.corrected.fa1.a }, B={ \display.negnum.adder.bcd3.corrected.fa3.s \display.negnum.adder.bcd3.corrected.fa2.s \display.negnum.adder.bcd3.corrected.fa1.s }, Y=\display.negnum.adder.bcd3.s [3:1]
      New connections: \display.negnum.adder.bcd3.s [0] = \display.negnum.adder.bcd3.adder1.fa0.s
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][0]$2001:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0]
      New connections: $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [6:1] = { 1'0 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][5]$2016:
      Old ports: A=7'1110111, B=7'1111100, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [0] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [6:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [2:1] } = { 4'1111 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][7]$1887:
      Old ports: A=7'1111001, B=7'1110001, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865 [3]
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865 [6:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865 [2:0] } = 6'111001
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][7]$1932:
      Old ports: A=7'1111001, B=7'1110001, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910 [3]
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910 [6:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910 [2:0] } = 6'111001
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][7]$1977:
      Old ports: A=7'1111001, B=7'1110001, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955 [3]
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955 [6:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955 [2:0] } = 6'111001
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][3][7]$2022:
      Old ports: A=7'1111001, B=7'1110001, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000 [3]
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000 [6:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000 [2:0] } = 6'111001
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1764:
      Old ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765, B=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1766, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1766 [0] }, Y={ $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [1:0] }
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [2] = $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1767:
      Old ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1768, B=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1769, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1760
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1768 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1769 [0] }, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1760 [2:0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1760 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$1989:
      Old ports: A=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990, B=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984
      New ports: A={ 1'0 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1990 [0] }, B={ 2'10 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1991 [2] 1'1 }, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [6:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [2] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [0] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [1] } = { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1984 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$1770:
      Old ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1771, B=4'0000, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1762
      New ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1771 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1762 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1762 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$1995:
      Old ports: A=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996, B=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987
      New ports: A={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1996 [3] 1'1 }, B={ 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1997 [0] }, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987 [4:3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987 [0] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987 [6:5] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987 [2:1] } = { 3'111 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1987 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$1998:
      Old ports: A=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999, B=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988
      New ports: A={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [1] 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1999 [1:0] }, B={ 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$2000 [3] 2'01 }, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [6] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [1:0] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [5:4] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [2] } = { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [0] 1'1 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1988 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$1725:
      Old ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1726, B=4'0000, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1717
      New ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1726 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1717 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1717 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1722:
      Old ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1723, B=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1724, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1715
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1723 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1724 [0] }, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1715 [2:0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1715 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1719:
      Old ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720, B=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1721, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1721 [0] }, Y={ $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [1:0] }
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [2] = $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$1680:
      Old ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1681, B=4'0000, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1672
      New ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1681 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1672 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1672 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$1905:
      Old ports: A=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906, B=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897
      New ports: A={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1906 [3] 1'1 }, B={ 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1907 [0] }, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897 [4:3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897 [0] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897 [6:5] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897 [2:1] } = { 3'111 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1897 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1677:
      Old ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1678, B=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1679, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1670
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1678 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1679 [0] }, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1670 [2:0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1670 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1674:
      Old ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675, B=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1676, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1676 [0] }, Y={ $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [1:0] }
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [2] = $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$1947:
      Old ports: A=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948, B=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940
      New ports: A={ 2'10 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948 [0] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1948 [1:0] }, B={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1949 [1] 1'1 }, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940 [6] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940 [4:3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940 [1:0] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940 [5] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1940 [2] } = 2'11
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$1953:
      Old ports: A=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954, B=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943
      New ports: A={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [1] 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1954 [1:0] }, B={ 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1955 [3] 2'01 }, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [6] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [1:0] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [5:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [2] } = { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [0] 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1943 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$1908:
      Old ports: A=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909, B=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898
      New ports: A={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [1] 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1909 [1:0] }, B={ 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1910 [3] 2'01 }, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [6] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [1:0] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [5:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [2] } = { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [0] 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1898 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$1944:
      Old ports: A=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945, B=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939
      New ports: A={ 1'0 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1945 [0] }, B={ 2'10 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1946 [2] 1'1 }, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [6:4] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [2] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [0] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [1] } = { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1939 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$1950:
      Old ports: A=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951, B=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952, Y=$memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942
      New ports: A={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1951 [3] 1'1 }, B={ 1'1 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1952 [0] }, Y={ $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942 [4:3] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942 [0] }
      New connections: { $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942 [6:5] $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942 [2:1] } = { 3'111 $memory$flatten\display.\num2.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1942 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$1899:
      Old ports: A=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900, B=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894
      New ports: A={ 1'0 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] 1'1 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1900 [0] }, B={ 2'10 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1901 [2] 1'1 }, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [6:4] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [2] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [0] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [1] } = { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1894 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$1863:
      Old ports: A=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864, B=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853
      New ports: A={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [1] 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$a$1864 [1:0] }, B={ 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][3]$b$1865 [3] 2'01 }, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [6] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [1:0] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [5:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [2] } = { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [0] 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$b$1853 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$1860:
      Old ports: A=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861, B=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852
      New ports: A={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$a$1861 [3] 1'1 }, B={ 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][2]$b$1862 [0] }, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852 [4:3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852 [0] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852 [6:5] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852 [2:1] } = { 3'111 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][1]$a$1852 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$1854:
      Old ports: A=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855, B=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849
      New ports: A={ 1'0 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] 1'1 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$a$1855 [0] }, B={ 2'10 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][0]$b$1856 [2] 1'1 }, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [6:4] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [2] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [0] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [1] } = { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$a$1849 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$1815:
      Old ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1816, B=4'0000, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1807
      New ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1816 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1807 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1807 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1812:
      Old ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1813, B=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1814, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1805
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1813 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1814 [0] }, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1805 [2:0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1805 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1809:
      Old ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810, B=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1811, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804
      New ports: A={ 2'10 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1811 [0] }, Y={ $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [1:0] }
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [2] = $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$1320:
      Old ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1321, B=4'0000, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1312
      New ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][2]$a$1321 [0], B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1312 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1312 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1317:
      Old ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1318, B=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1319, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1310
      New ports: A={ 2'10 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$a$1318 [0] }, B={ 2'01 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$b$1319 [0] }, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1310 [2:0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$b$1310 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1314:
      Old ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315, B=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1316, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309
      New ports: A={ 2'10 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [0] }, B={ 2'01 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$b$1316 [0] }, Y={ $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [1:0] }
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [2] = $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$1857:
      Old ports: A=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858, B=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859, Y=$memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850
      New ports: A={ 2'10 $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858 [0] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1858 [1:0] }, B={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1859 [1] 1'1 }, Y={ $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850 [6] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850 [4:3] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850 [1:0] }
      New connections: { $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850 [5] $memory$flatten\display.\num0.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1850 [2] } = 2'11
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$1902:
      Old ports: A=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903, B=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904, Y=$memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895
      New ports: A={ 2'10 $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903 [0] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1903 [1:0] }, B={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1904 [1] 1'1 }, Y={ $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895 [6] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895 [4:3] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895 [1:0] }
      New connections: { $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895 [5] $memory$flatten\display.\num1.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1895 [2] } = 2'11
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$694:
      Old ports: A=4'0011, B=$flatten\display.$17\en[3:0], Y=$flatten\display.$16\en[3:0]
      New ports: A=2'00, B={ $flatten\display.$17\en[3:0] [3] 1'1 }, Y=$flatten\display.$16\en[3:0] [3:2]
      New connections: $flatten\display.$16\en[3:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$784:
      Old ports: A=4'0011, B=$flatten\display.$13\en[3:0], Y=$flatten\display.$12\en[3:0]
      New ports: A=2'00, B={ $flatten\display.$13\en[3:0] [3] 1'1 }, Y=$flatten\display.$12\en[3:0] [3:2]
      New connections: $flatten\display.$12\en[3:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$839:
      Old ports: A=4'0011, B=$flatten\display.$10\en[3:0], Y=$flatten\display.$9\en[3:0]
      New ports: A=2'00, B={ $flatten\display.$10\en[3:0] [3] 1'1 }, Y=$flatten\display.$9\en[3:0] [3:2]
      New connections: $flatten\display.$9\en[3:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$894:
      Old ports: A={ 1'1 $auto$wreduce.cc:461:run$1071 [51:0] }, B={ 21'011100111100100111000 $auto$wreduce.cc:461:run$1070 [31:0] }, Y={ $flatten\display.$3\info[55:0] [54] $flatten\display.$3\info[55:0] [51:0] }
      New ports: A={ $auto$wreduce.cc:461:run$1071 [35] $auto$wreduce.cc:461:run$1071 [41] $auto$wreduce.cc:461:run$1071 [41] 2'01 $auto$wreduce.cc:461:run$1071 [35] 1'x \display.num3.out }, B={ 6'010101 $auto$wreduce.cc:461:run$1070 [31:24] }, Y={ $flatten\display.$3\info[55:0] [48] $flatten\display.$3\info[55:0] [46] $flatten\display.$3\info[55:0] [41:40] $flatten\display.$3\info[55:0] [38] $flatten\display.$3\info[55:0] [35] $flatten\display.$3\info[55:0] [31:24] }
      New connections: { $flatten\display.$3\info[55:0] [54] $flatten\display.$3\info[55:0] [51:49] $flatten\display.$3\info[55:0] [47] $flatten\display.$3\info[55:0] [45:42] $flatten\display.$3\info[55:0] [39] $flatten\display.$3\info[55:0] [37:36] $flatten\display.$3\info[55:0] [34:32] $flatten\display.$3\info[55:0] [23:0] } = { $flatten\display.$3\info[55:0] [38] $flatten\display.$3\info[55:0] [46] $flatten\display.$3\info[55:0] [35] $flatten\display.$3\info[55:0] [35] 3'011 $flatten\display.$3\info[55:0] [35] $flatten\display.$3\info[55:0] [41] 1'0 $flatten\display.$3\info[55:0] [35] 5'1000x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$937:
      Old ports: A=4'0011, B=$flatten\display.$5\en[3:0], Y=$flatten\display.$4\en[3:0]
      New ports: A=2'00, B={ $flatten\display.$5\en[3:0] [3] 1'1 }, Y=$flatten\display.$4\en[3:0] [3:2]
      New connections: $flatten\display.$4\en[3:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$957:
      Old ports: A=$flatten\display.$3\info[55:0], B={ 25'011011110111011101101101x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y=$flatten\display.$2\info[55:0]
      New ports: A={ $flatten\display.$3\info[55:0] [54] 1'1 $flatten\display.$3\info[55:0] [51:0] }, B={ 23'1011110111011101101101x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y={ $flatten\display.$2\info[55:0] [54] $flatten\display.$2\info[55:0] [52:0] }
      New connections: { $flatten\display.$2\info[55:0] [55] $flatten\display.$2\info[55:0] [53] } = 2'01
    Consolidated identical input bits for $mux cell $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$1992:
      Old ports: A=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993, B=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994, Y=$memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985
      New ports: A={ 2'10 $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993 [0] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$a$1993 [1:0] }, B={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][2][1]$b$1994 [1] 1'1 }, Y={ $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985 [6] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985 [4:3] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985 [1:0] }
      New connections: { $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985 [5] $memory$flatten\display.\num3.$auto$proc_rom.cc:155:do_switch$549$rdmux[0][1][0]$b$1985 [2] } = 2'11
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$1761:
      Old ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1762, B=4'0000, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1757
      New ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1762 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1757 [0]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1757 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$1716:
      Old ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1717, B=4'0000, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1712
      New ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1717 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1712 [0]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1712 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$1671:
      Old ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1672, B=4'0000, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1667
      New ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1672 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1667 [0]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1667 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$1806:
      Old ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1807, B=4'0000, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1802
      New ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1807 [0], B=1'0, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1802 [0]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1802 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$1311:
      Old ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1312, B=4'0000, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1307
      New ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][1]$a$1312 [0], B=1'0, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1307 [0]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$b$1307 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$712:
      Old ports: A=4'0001, B=$flatten\display.$16\en[3:0], Y=$flatten\display.$15\en[3:0]
      New ports: A=3'000, B={ $flatten\display.$16\en[3:0] [3:2] 1'1 }, Y=$flatten\display.$15\en[3:0] [3:1]
      New connections: $flatten\display.$15\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$802:
      Old ports: A=4'0001, B=$flatten\display.$12\en[3:0], Y=$flatten\display.$11\en[3:0]
      New ports: A=3'000, B={ $flatten\display.$12\en[3:0] [3:2] 1'1 }, Y=$flatten\display.$11\en[3:0] [3:1]
      New connections: $flatten\display.$11\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$857:
      Old ports: A=4'0001, B=$flatten\display.$9\en[3:0], Y=$flatten\display.$8\en[3:0]
      New ports: A=3'000, B={ $flatten\display.$9\en[3:0] [3:2] 1'1 }, Y=$flatten\display.$8\en[3:0] [3:1]
      New connections: $flatten\display.$8\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$949:
      Old ports: A=4'0001, B=$flatten\display.$4\en[3:0], Y=$flatten\display.$3\en[3:0]
      New ports: A=3'000, B={ $flatten\display.$4\en[3:0] [3:2] 1'1 }, Y=$flatten\display.$3\en[3:0] [3:1]
      New connections: $flatten\display.$3\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$957:
      Old ports: A={ $flatten\display.$3\info[55:0] [54] 1'1 $flatten\display.$3\info[55:0] [51:0] }, B={ 23'1011110111011101101101x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y={ $flatten\display.$2\info[55:0] [54] $flatten\display.$2\info[55:0] [52:0] }
      New ports: A={ $flatten\display.$3\info[55:0] [48] $flatten\display.$3\info[55:0] [46] $flatten\display.$3\info[55:0] [35] $flatten\display.$3\info[55:0] [41:40] $flatten\display.$3\info[55:0] [38] 1'1 $flatten\display.$3\info[55:0] [35] 1'0 $flatten\display.$3\info[55:0] [31:24] }, B={ 10'110111011x \display.num3.out }, Y={ $flatten\display.$2\info[55:0] [48] $flatten\display.$2\info[55:0] [46] $flatten\display.$2\info[55:0] [43] $flatten\display.$2\info[55:0] [41:40] $flatten\display.$2\info[55:0] [38] $flatten\display.$2\info[55:0] [36:35] $flatten\display.$2\info[55:0] [32:24] }
      New connections: { $flatten\display.$2\info[55:0] [54] $flatten\display.$2\info[55:0] [52:49] $flatten\display.$2\info[55:0] [47] $flatten\display.$2\info[55:0] [45:44] $flatten\display.$2\info[55:0] [42] $flatten\display.$2\info[55:0] [39] $flatten\display.$2\info[55:0] [37] $flatten\display.$2\info[55:0] [34:33] $flatten\display.$2\info[55:0] [23:0] } = { $flatten\display.$2\info[55:0] [38] $flatten\display.$2\info[55:0] [36] $flatten\display.$2\info[55:0] [46] $flatten\display.$2\info[55:0] [35] $flatten\display.$2\info[55:0] [35] 3'011 $flatten\display.$2\info[55:0] [41] 1'0 $flatten\display.$2\info[55:0] [35] $flatten\display.$2\info[55:0] [32] 2'0x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$975:
      Old ports: A=$flatten\display.$2\info[55:0], B={ 25'011110000111011001010000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y=\display.info
      New ports: A={ $flatten\display.$2\info[55:0] [54] $flatten\display.$2\info[55:0] [52:0] }, B={ 23'1110000111011001010000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y={ \display.info [54] \display.info [52:0] }
      New connections: { \display.info [55] \display.info [53] } = 2'01
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$738:
      Old ports: A=4'0001, B=$flatten\display.$15\en[3:0], Y=$flatten\display.$14\en[3:0]
      New ports: A=3'000, B=$flatten\display.$15\en[3:0] [3:1], Y=$flatten\display.$14\en[3:0] [3:1]
      New connections: $flatten\display.$14\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$883:
      Old ports: A=$flatten\display.$11\en[3:0], B=$flatten\display.$8\en[3:0], Y=$flatten\display.$7\en[3:0]
      New ports: A=$flatten\display.$11\en[3:0] [3:1], B=$flatten\display.$8\en[3:0] [3:1], Y=$flatten\display.$7\en[3:0] [3:1]
      New connections: $flatten\display.$7\en[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$975:
      Old ports: A={ $flatten\display.$2\info[55:0] [54] $flatten\display.$2\info[55:0] [52:0] }, B={ 23'1110000111011001010000x \display.num3.out 1'x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }, Y={ \display.info [54] \display.info [52:0] }
      New ports: A={ $flatten\display.$2\info[55:0] [48] $flatten\display.$2\info[55:0] [46] $flatten\display.$2\info[55:0] [43] $flatten\display.$2\info[55:0] [41:40] $flatten\display.$2\info[55:0] [38] $flatten\display.$2\info[55:0] [36:35] $flatten\display.$2\info[55:0] [32:24] }, B={ 10'010101100x \display.num3.out }, Y={ \display.info [48] \display.info [46] \display.info [43] \display.info [41:40] \display.info [38] \display.info [36:35] \display.info [32:24] }
      New connections: { \display.info [54] \display.info [52:49] \display.info [47] \display.info [45:44] \display.info [42] \display.info [39] \display.info [37] \display.info [34:33] \display.info [23:0] } = { \display.info [38] \display.info [36] \display.info [46] \display.info [35] \display.info [35] 3'011 \display.info [41] 1'0 \display.info [35] \display.info [32] 2'0x \display.num2.out 1'x \display.num1.out 1'x \display.num0.out }
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$903:
      Old ports: A=$flatten\display.$14\en[3:0], B=$flatten\display.$7\en[3:0], Y=$flatten\display.$6\en[3:0]
      New ports: A=$flatten\display.$14\en[3:0] [3:1], B=$flatten\display.$7\en[3:0] [3:1], Y=$flatten\display.$6\en[3:0] [3:1]
      New connections: $flatten\display.$6\en[3:0] [0] = 1'1
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$963:
      Old ports: A=$flatten\display.$6\en[3:0], B=$flatten\display.$3\en[3:0], Y=$flatten\display.$2\en[3:0]
      New ports: A=$flatten\display.$6\en[3:0] [3:1], B=$flatten\display.$3\en[3:0] [3:1], Y=$flatten\display.$2\en[3:0] [3:1]
      New connections: $flatten\display.$2\en[3:0] [0] = 1'1
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $flatten\display.$procmux$978:
      Old ports: A=$flatten\display.$2\en[3:0], B=4'0001, Y=\display.en
      New ports: A=$flatten\display.$2\en[3:0] [3:1], B=3'000, Y=\display.en [3:1]
      New connections: \display.en [0] = 1'1
  Optimizing cells in module \lunarlander.
Performed a total of 142 changes.

6.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

6.29.6. Executing OPT_DFF pass (perform DFF optimizations).

6.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 531 unused wires.
<suppressed ~1 debug messages>

6.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~1 debug messages>

6.29.9. Rerunning OPT passes. (Maybe there is more to do..)

6.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

6.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$1308:
      Old ports: A={ $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3:2] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [2] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [0] }, B={ 1'0 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3:2] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [0] }, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1306
      New ports: A=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3:2], B={ 1'0 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3] }, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1306 [3:2]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1306 [1:0] = { $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [2] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1317:
      Old ports: A={ 2'10 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [0] }, B={ 2'01 $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [0] }, Y={ $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3:2] $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [0] }
      New ports: A=2'10, B=2'01, Y=$memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [3:2]
      New connections: $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1309 [0] = $memory$flatten\calc.\fuel_c.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1315 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$1668:
      Old ports: A={ $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3:2] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [2] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [0] }, B={ 1'0 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3:2] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [0] }, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1666
      New ports: A=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3:2], B={ 1'0 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3] }, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1666 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1666 [1:0] = { $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [2] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1677:
      Old ports: A={ 2'10 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [0] }, Y={ $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3:2] $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [0] }
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1669 [0] = $memory$flatten\display.\negnum.\comp0.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1675 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$1713:
      Old ports: A={ $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3:2] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [2] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [0] }, B={ 1'0 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3:2] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [0] }, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1711
      New ports: A=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3:2], B={ 1'0 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3] }, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1711 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1711 [1:0] = { $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [2] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1722:
      Old ports: A={ 2'10 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [0] }, Y={ $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3:2] $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [0] }
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1714 [0] = $memory$flatten\display.\negnum.\comp1.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1720 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$1758:
      Old ports: A={ $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3:2] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [2] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [0] }, B={ 1'0 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3:2] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [0] }, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1756
      New ports: A=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3:2], B={ 1'0 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3] }, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1756 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1756 [1:0] = { $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [2] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$1764:
      Old ports: A={ 2'10 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [0] }, Y={ $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3:2] $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [0] }
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1759 [0] = $memory$flatten\display.\negnum.\comp2.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1765 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$1803:
      Old ports: A={ $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3:2] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [2] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [0] }, B={ 1'0 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3:2] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [0] }, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1801
      New ports: A=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3:2], B={ 1'0 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3] }, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1801 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][0][0]$a$1801 [1:0] = { $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [2] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][1]$1812:
      Old ports: A={ 2'10 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [0] }, B={ 2'01 $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [0] }, Y={ $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3:2] $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [0] }
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [3:2]
      New connections: $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][1][0]$a$1804 [0] = $memory$flatten\display.\negnum.\comp3.$auto$proc_rom.cc:155:do_switch$553$rdmux[0][2][0]$a$1810 [0]
  Optimizing cells in module \lunarlander.
Performed a total of 10 changes.

6.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.29.13. Executing OPT_DFF pass (perform DFF optimizations).

6.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

6.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.29.16. Rerunning OPT passes. (Maybe there is more to do..)

6.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

6.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.29.20. Executing OPT_DFF pass (perform DFF optimizations).

6.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.29.23. Finished OPT passes. (There is nothing left to do.)

6.30. Executing ICE40_WRAPCARRY pass (wrap carries).

6.31. Executing TECHMAP pass (map to technology primitives).

6.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

6.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$3fa4d8c2b730442484d1c6f3ffc3c9e67c05faba\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$c8f9642fe0e0f4527ea400b1bd678c474f53d556\_80_ice40_alu for cells of type $alu.
Using template $paramod$9dd2c168c92ea5e7211728a4dd85e9d07319b5c9\_80_ice40_alu for cells of type $alu.
Using template $paramod$5168aae49e4c2f5be022b435d3f3df25f30776ec\_80_ice40_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1196 debug messages>

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~826 debug messages>

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~927 debug messages>
Removed a total of 309 cells.

6.32.3. Executing OPT_DFF pass (perform DFF optimizations).

6.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 9 unused cells and 407 unused wires.
<suppressed ~10 debug messages>

6.32.5. Finished fast OPT passes.

6.33. Executing ICE40_OPT pass (performing simple optimizations).

6.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1090.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1090.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1101.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1090.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1112.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1090.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1123.slice[0].carry: CO=\calc.vel_c_step.adder.bcd0.adder1.fa0.s
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1134.slice[0].carry: CO=\calc.vel_c_step.adder.bcd0.adder1.fa0.s
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1145.slice[0].carry: CO=\calc.vel_c_step.adder.bcd0.adder1.fa0.s
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1156.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1167.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1178.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1189.slice[0].carry: CO=\mem.vel [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1200.slice[0].carry: CO=\mem.vel [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1211.slice[0].carry: CO=\mem.vel [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1222.slice[0].carry: CO=\mem.vel [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1227.slice[0].carry: CO=\calc.vel_c_step.adder.bcd0.adder1.fa0.s
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1232.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1232.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1237.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1237.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) lunarlander.$auto$alumacc.cc:485:replace_alu$1242.slice[0].carry: CO=\clk.counter [0]

6.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~8 debug messages>

6.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

6.33.4. Executing OPT_DFF pass (perform DFF optimizations).

6.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 7 unused cells and 4 unused wires.
<suppressed ~8 debug messages>

6.33.6. Rerunning OPT passes. (Removed registers in this run.)

6.33.7. Running ICE40 specific optimizations.

6.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.33.10. Executing OPT_DFF pass (perform DFF optimizations).

6.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.33.12. Finished OPT passes. (There is nothing left to do.)

6.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.35. Executing TECHMAP pass (map to technology primitives).

6.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

6.35.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
No more expansions possible.
<suppressed ~96 debug messages>

6.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping lunarlander.$auto$alumacc.cc:485:replace_alu$1242.slice[0].carry ($lut).

6.38. Executing ICE40_OPT pass (performing simple optimizations).

6.38.1. Running ICE40 specific optimizations.

6.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~105 debug messages>

6.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

6.38.4. Executing OPT_DFF pass (perform DFF optimizations).

6.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 439 unused wires.
<suppressed ~1 debug messages>

6.38.6. Rerunning OPT passes. (Removed registers in this run.)

6.38.7. Running ICE40 specific optimizations.

6.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.38.10. Executing OPT_DFF pass (perform DFF optimizations).

6.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.38.12. Finished OPT passes. (There is nothing left to do.)

6.39. Executing TECHMAP pass (map to technology primitives).

6.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

6.41. Executing ABC9 pass.

6.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module lunarlander.
Found 0 SCCs.

6.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.5. Executing PROC pass (convert processes to netlists).

6.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

6.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

6.41.5.4. Executing PROC_INIT pass (extract init attributes).

6.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

6.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

6.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

6.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

6.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.41.5.12. Executing OPT_EXPR pass (perform const folding).

6.41.6. Executing TECHMAP pass (map to technology primitives).

6.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~129 debug messages>

6.41.7. Executing OPT pass (performing simple optimizations).

6.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFES.
Optimizing module SB_DFFER.
Optimizing module SB_DFFR.

6.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

6.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFES.
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFR.
Performed a total of 0 changes.

6.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

6.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

6.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFES..
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFR..

6.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

6.41.7.9. Finished OPT passes. (There is nothing left to do.)

6.41.8. Executing TECHMAP pass (map to technology primitives).

6.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

6.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFR for cells of type SB_DFFR.
Using template SB_DFFES for cells of type SB_DFFES.
No more expansions possible.
<suppressed ~79 debug messages>

6.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

6.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

6.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

6.41.13. Executing TECHMAP pass (map to technology primitives).

6.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~148 debug messages>

6.41.14. Executing OPT pass (performing simple optimizations).

6.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.
<suppressed ~4 debug messages>

6.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

6.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

6.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

6.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

6.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \lunarlander..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \lunarlander.
Performed a total of 0 changes.

6.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\lunarlander'.
Removed a total of 0 cells.

6.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

6.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lunarlander..

6.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module lunarlander.

6.41.14.16. Finished OPT passes. (There is nothing left to do.)

6.41.15. Executing AIGMAP pass (map logic to AIG).
Module lunarlander: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

6.41.16. Executing AIGMAP pass (map logic to AIG).
Module lunarlander: replaced 936 cells with 5586 new cells, skipped 1326 cells.
  replaced 3 cell types:
     322 $_OR_
     207 $_XOR_
     407 $_MUX_
  not replaced 10 cell types:
     360 $scopeinfo
     134 $_NOT_
     441 $_AND_
      13 SB_DFFR
      52 SB_DFFER
       9 SB_DFFES
       9 SB_DFFES_$abc9_byp
      13 SB_DFFR_$abc9_byp
      52 SB_DFFER_$abc9_byp
     243 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1

6.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

6.41.16.3. Executing XAIGER backend.
<suppressed ~85 debug messages>
Extracted 2605 AND gates and 6914 wires from module `lunarlander' to a netlist network with 96 inputs and 138 outputs.

6.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

6.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     96/    138  and =    2160  lev =   69 (4.09)  mem = 0.06 MB  box = 317  bb = 74
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     96/    138  and =    1773  lev =   46 (3.38)  mem = 0.04 MB  ch =  259  box = 227  bb = 74
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 9 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =    1773.  Ch =   231.  Total mem =    0.45 MB. Peak cut mem =    0.03 MB.
ABC: P:  Del = 9425.00.  Ar =     647.0.  Edge =     2364.  Cut =    14706.  T =     0.00 sec
ABC: P:  Del = 9404.00.  Ar =     612.0.  Edge =     2245.  Cut =    13851.  T =     0.00 sec
ABC: P:  Del = 9404.00.  Ar =     574.0.  Edge =     1834.  Cut =    15877.  T =     0.00 sec
ABC: F:  Del = 9404.00.  Ar =     505.0.  Edge =     1685.  Cut =    13110.  T =     0.00 sec
ABC: A:  Del = 9404.00.  Ar =     488.0.  Edge =     1568.  Cut =    12740.  T =     0.00 sec
ABC: A:  Del = 9404.00.  Ar =     485.0.  Edge =     1559.  Cut =    13119.  T =     0.00 sec
ABC: Total time =     0.02 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: yosys-abc: src/aig/gia/giaMfs.c:386: abc::Gia_Man_t* abc::Gia_ManInsertMfs(abc::Gia_Man_t*, abc::Sfm_Ntk_t*, int): Assertion `iLitNew >= 0' failed.
ABC: Aborted (core dumped)
Warning: ABC: execution of command ""/home/shay/a/ece270/bin/yosys-abc" -s -f /tmp/yosys-abc-mvXhv1/abc.script 2>&1" failed: return code 134.

6.41.16.6. Executing AIGER frontend.
<suppressed ~570 debug messages>
Removed 2560 unused cells and 4077 unused wires.

6.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      534
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:        9
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:       13
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:       52
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      153
ABC RESULTS:           input signals:       77
ABC RESULTS:          output signals:       28
Removing temp directory.

6.41.17. Executing TECHMAP pass (map to technology primitives).

6.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

6.41.17.2. Continuing TECHMAP pass.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
No more expansions possible.
<suppressed ~236 debug messages>

6.42. Executing ICE40_WRAPCARRY pass (wrap carries).

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 177 unused cells and 10028 unused wires.

6.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      544
  1-LUT               49
  2-LUT              125
  3-LUT              142
  4-LUT              228
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Eliminating LUTs.
Number of LUTs:      544
  1-LUT               49
  2-LUT              125
  3-LUT              142
  4-LUT              228
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Combining LUTs.
Number of LUTs:      542
  1-LUT               49
  2-LUT              123
  3-LUT              140
  4-LUT              230
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Eliminated 0 LUTs.
Combined 2 LUTs.
<suppressed ~2584 debug messages>

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$2895845b3d3587c01afc73c22379595a0940d98f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$fda5624e95c3e7246f2ef87608fb2c1bc74f7596\$lut for cells of type $lut.
Using template $paramod$18cc0b9465aa6c0d10a720a25b0f0af554f48a39\$lut for cells of type $lut.
Using template $paramod$6d66cbd93dd0f02e48ed7ca569cd9de8ccc265c1\$lut for cells of type $lut.
Using template $paramod$aa471ad16d82a5785a3cf3d18330169d6ba4059c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod$ae978da6d41dfd6270212068a002f9dcd265cd83\$lut for cells of type $lut.
Using template $paramod$693bc3640a7517b313143c1e8f94a197396bd107\$lut for cells of type $lut.
Using template $paramod$a20d493743c6e762e93052351143ea302aa9a813\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$02fbe8c67d33eabc42a06d471f5fbd85b121dbcc\$lut for cells of type $lut.
Using template $paramod$9e2340e4b668cbe4ab2a0b5e706072b39d8ecfb8\$lut for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod$4d3b31a0a9d2baf1869344f863b6a086b66047aa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$f13784ede300b12a5285177c86c7721a54cf9e12\$lut for cells of type $lut.
Using template $paramod$35059585e93e18989247e13034fd6a1ce4de9957\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$849d013d096d73269ca4beb768f8e399745d37f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$67815d2885a287e2fead3234251de373c0329d30\$lut for cells of type $lut.
Using template $paramod$2016f2b7551b7ebce4b6cfc21a642574cdfb6716\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod$7b7ec239bc40f3d17f29e4c86c71d9bb7e957c4e\$lut for cells of type $lut.
Using template $paramod$4bff226e75ca1a1a07a8d9231752343f5ee78d7a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod$a36df8cc99428717d44c2342ab2159150ec5d5d5\$lut for cells of type $lut.
Using template $paramod$5e21ce4db33ffbe317c0e7462112118a24409ec8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$a7ea65bc5d98d0d0057d4b1a7128af478b2e5aa6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod$2f35f125a78690286f0cd2faecbaee9c64828b65\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$f85ac1ab49c7badad3179e9e040192aa0de982a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$ecf2a17c061c17763d12592309f482d512af5e13\$lut for cells of type $lut.
Using template $paramod$a502d90a28533c6d8d9c8a6d7c00e5512a5b19b4\$lut for cells of type $lut.
Using template $paramod$8d73b83bdf4cffea3ab492cd8fbf6a1ed344b81c\$lut for cells of type $lut.
Using template $paramod$bf9d12be9e757c28b1374b63e168615e76b4b315\$lut for cells of type $lut.
Using template $paramod$2c637120c6d9fc5c5bf88b8f5959bb09ad31cbae\$lut for cells of type $lut.
Using template $paramod$122a4c0b007fa7ed75dbda7c4d71a52e22ce1276\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011101 for cells of type $lut.
Using template $paramod$3c12147ed4a6245d580ba8a38833f218dc7b3deb\$lut for cells of type $lut.
Using template $paramod$e5f9c44d6a44ef354219acf61420edbcc02a4fba\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$a693f2702f6e169bac7b325cadb34c2242415342\$lut for cells of type $lut.
Using template $paramod$7c03acbdd2c22a60c4215615c88939d7c33e33c1\$lut for cells of type $lut.
Using template $paramod$083b599695aeb6a08c841471be4127090c4fb034\$lut for cells of type $lut.
Using template $paramod$44b495e2dfd92e6a22247f7180b6e579a40e15e3\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$2e242b3870fd1c78b14e7f95ffa17bf0b3a3339c\$lut for cells of type $lut.
Using template $paramod$bd83ca44f70d87eaa38a69149f533032848735dc\$lut for cells of type $lut.
Using template $paramod$68a5562a2aef473fffcfb539a6b59c5080cbe361\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$342bee13e56fb531461a4b34194dbaa87df5bc5e\$lut for cells of type $lut.
Using template $paramod$62b80730556bd5ae77b59b3d21eadf0032f5fb7e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010001 for cells of type $lut.
Using template $paramod$6f332b5478772d5419ba7c4543b375e61cb9d305\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$52dba6761665aed9152453b29dcef2985488963d\$lut for cells of type $lut.
Using template $paramod$e67f7401ddeed7957ea40cf37767a32ba5d5b941\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$b009a26b33c3ca109c016cf968a774c0d66687bb\$lut for cells of type $lut.
Using template $paramod$26cc1120dedbb3423dd9fcb87c857aac4db53ac1\$lut for cells of type $lut.
Using template $paramod$e6677117dd5b1999659fdeb755a21a6bd0a322bc\$lut for cells of type $lut.
Using template $paramod$c57aef76245374a526d1737c12ba1e33898ce46e\$lut for cells of type $lut.
Using template $paramod$c63a3b61eede5c428e106e2ab40cb4679c5fc42e\$lut for cells of type $lut.
Using template $paramod$751b8938dc6d5a65330f0aa7090b52ffaa4c0418\$lut for cells of type $lut.
Using template $paramod$a50983bc2d916c31a7d4beac5feb90028d16502d\$lut for cells of type $lut.
Using template $paramod$037be5c00d8a02858cdb1ab049b58a0133287ff1\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$5e7154cc67448ade7067c076e8a8c41314d04253\$lut for cells of type $lut.
Using template $paramod$96db07313a648db8e153720a28f782251059bfe9\$lut for cells of type $lut.
Using template $paramod$9d8fac92947d5a2f8e574b0864fde76f6ce05d14\$lut for cells of type $lut.
Using template $paramod$5ac870b65e40d29cc9ebe615eb79152238e86fb5\$lut for cells of type $lut.
Using template $paramod$5d9820c4b420dd551efbb9e4711e2972e255ddf7\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$eaea85d27cc0950ed001348e061727a194f5cf9c\$lut for cells of type $lut.
Using template $paramod$f610396a8c1614f373f4d73e3d1e988bc93e396c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100001 for cells of type $lut.
Using template $paramod$9584474399e2bcddc81b18ae918970486d60eb4e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$529baf23c57d5ed871d62e547aaaa8bb53e364ce\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$c20e9cdb8ce0b0008600da6cf3b4e69036652cf2\$lut for cells of type $lut.
Using template $paramod$a947c8f58e86d5e78191ed681cb7cfd03d4b2726\$lut for cells of type $lut.
Using template $paramod$bff60da521de773f8caf46fbc0845c3d7d3e2310\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011001 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$704cad882e2bedddf5c55ef18de55c67afe1e0ec\$lut for cells of type $lut.
Using template $paramod$cd8975dc11fa0a0f43767c66f462c08cafafa82c\$lut for cells of type $lut.
Using template $paramod$ed2419b40cde40a89b090949255057d856539fe1\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$9e354e0162d9e2cbf1a0c914f3be74df92b5399d\$lut for cells of type $lut.
Using template $paramod$a6e9128d30ad06d6387089dbdeb2dd6d29820bf7\$lut for cells of type $lut.
Using template $paramod$0995ca74663da9a2677fc508304d30fda2216e5e\$lut for cells of type $lut.
Using template $paramod$e4cede61517c69f4283b34833b70389aba0ba4b3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$4792898d0944eff5218203a2b1aacfad4d8ff2b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100101 for cells of type $lut.
Using template $paramod$2efc88e947d1d1301adf55fbe79659b3906acad3\$lut for cells of type $lut.
Using template $paramod$2bb48a6b95aaf207dc9ece6749cd3d5044e4cd05\$lut for cells of type $lut.
Using template $paramod$ca6ff281a937b6e67e548131663886792b7b85a8\$lut for cells of type $lut.
Using template $paramod$6000da44b315906c2673c3cb4c3beee5a3b31e12\$lut for cells of type $lut.
Using template $paramod$80c13bbf7d0bb56773beb70d0aff02fb78a76780\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110010 for cells of type $lut.
Using template $paramod$2af7fd5c408581c2b6e80048f54948ce05a232f8\$lut for cells of type $lut.
Using template $paramod$6100b7bb55ca0d268b8c6c13d0fce051de8aae98\$lut for cells of type $lut.
Using template $paramod$f85ae085f6b12ebae7987bbdc19b66ee20cecb36\$lut for cells of type $lut.
Using template $paramod$f81ecf3eb88491df8fecf1e071b57debc429282a\$lut for cells of type $lut.
Using template $paramod$f24ba3ced4b870f8e829f5ac5a8af88573350e6f\$lut for cells of type $lut.
Using template $paramod$b1f01d1a6442cce30a958d756be8bbcf976f6dba\$lut for cells of type $lut.
Using template $paramod$7c6c6ce6eec04b633fb1f430574af2ae67241051\$lut for cells of type $lut.
Using template $paramod$fe70bb3280659663b8fa2b45f42fda9ccf4ccfaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$61e71a6b219041f218388451735d309581e08c5a\$lut for cells of type $lut.
Using template $paramod$b1680225cc6a5792caa95f54b8b3218fae21705d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$b2cbe99f64072364f7ab85f257c666df32f0ed28\$lut for cells of type $lut.
Using template $paramod$65d5d5c1e01bf41ee659754efba932f3d99198e5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod$c6a0421f5b5114b68e9782f0585d571421cf8f01\$lut for cells of type $lut.
Using template $paramod$c5ec48e05963d03505bc5b80bef941b1be7cd945\$lut for cells of type $lut.
Using template $paramod$1632c1c0242796acfc963a05742c4acd2f475c4e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$c9a5f10cfe2866b54e3dd618c01c11c2e15914ae\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$61c387311e0b7b1481f282cf3d339bc22e86cf60\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000100 for cells of type $lut.
Using template $paramod$169e3ff199948acb6289d60ee69a6cbdb1d4057e\$lut for cells of type $lut.
Using template $paramod$086937f2e69afb7c662e45e33f5a7616aa818da8\$lut for cells of type $lut.
Using template $paramod$c5959e322f02151ee723373284176688a38cfc17\$lut for cells of type $lut.
Using template $paramod$2ff6fcde08f61b4d9b4f007f9cab083a31f6138a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$31f0a66a4b242b524303bfb4ac95c05ad74158f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$4a0b7d2a2849f16773696ba19d68aee3da2f49f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000011 for cells of type $lut.
Using template $paramod$3ae9f1cda205b669870c653a21d45eee50078e98\$lut for cells of type $lut.
Using template $paramod$eab8c2e20ad6848564bec45c7148558972138f5b\$lut for cells of type $lut.
Using template $paramod$a33f77522e8e87da5003659fca4985ab5c5a1b84\$lut for cells of type $lut.
Using template $paramod$ec6c71d259df49ae0842190ffaff1179e43a8db4\$lut for cells of type $lut.
Using template $paramod$857512ea84a5fe5464efcd374b77666399ea78e1\$lut for cells of type $lut.
Using template $paramod$a154b4848eceeec98f3abab7a40710398d86442e\$lut for cells of type $lut.
Using template $paramod$02a39d6f75416c06fff45fc81145d64144c93f5a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010111 for cells of type $lut.
Using template $paramod$aba998010061fd89aa0e079509f1d57adb2d51b1\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod$2f2b9b736b3ea0a0b958cef6434418c8f6a25d02\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$e8802f5c192654a2300866261e532a68ab02d03f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000110 for cells of type $lut.
Using template $paramod$033940914b48bd91e9c76770021d3e6fd49ac34a\$lut for cells of type $lut.
Using template $paramod$89ecea64a21f1d46300084f3bd1ea75b5999f12a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$8f0687b3b1e843d1af48a2820ee1e560d6b66240\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$46d981b5eabc08c1691f743d7a017e4435316de4\$lut for cells of type $lut.
Using template $paramod$b1d41c251992348e752b19c12db8a58434359feb\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$1343edce7d3a957b4ed0f1f83825df9a2e0b3f18\$lut for cells of type $lut.
Using template $paramod$2d136f7cc750d196977194febd5ef4afea6f836a\$lut for cells of type $lut.
Using template $paramod$3f9a3800e34bd795630a4eaf44b2e1d4a7f48a74\$lut for cells of type $lut.
Using template $paramod$bba44f6558ce7b5b1f780ca551f5f07b48775eaf\$lut for cells of type $lut.
Using template $paramod$b89bf32718d9c9f4a09995f43158238336284c12\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~3171 debug messages>
Removed 0 unused cells and 1282 unused wires.

6.46. Executing AUTONAME pass.
Renamed 22313 objects in module lunarlander (129 iterations).
<suppressed ~1231 debug messages>

6.47. Executing HIERARCHY pass (managing design hierarchy).

6.47.1. Analyzing design hierarchy..
Top module:  \lunarlander

6.47.2. Analyzing design hierarchy..
Top module:  \lunarlander
Removed 0 unused modules.

6.48. Printing statistics.

=== lunarlander ===

   Number of wires:                970
   Number of wire bits:           2541
   Number of public wires:         970
   Number of public wire bits:    2541
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1128
     $scopeinfo                    360
     SB_CARRY                      152
     SB_DFFER                       52
     SB_DFFES                        9
     SB_DFFR                        13
     SB_LUT4                       542

6.49. Executing CHECK pass (checking for obvious problems).
Checking module lunarlander...
Found and reported 0 problems.

7. Executing Verilog backend.

7.1. Executing BMUXMAP pass.

7.2. Executing DEMUXMAP pass.
Dumping module `\lunarlander'.

Warnings: 11 unique messages, 11 total
End of script. Logfile hash: dc4b2c2404, CPU: user 1.67s system 0.03s, MEM: 55.49 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 17% 32x opt_expr (0 sec), 17% 28x opt_clean (0 sec), ...
iverilog -g2012 tb_ll.sv build/ll.v support/cells_*.v -o build/sim
./build/sim
VCD info: dumpfile lunarlander.vcd opened for output.
Time:            275000000
Checking outputs for 1. Reset and check altitude
PASSED: 1. Reset and check altitude, crash == 0
PASSED: 1. Reset and check altitude, land == 0
PASSED: 1. Reset and check altitude, ss7 == 77
PASSED: 1. Reset and check altitude, ss6 == 38
PASSED: 1. Reset and check altitude, ss5 == 78
PASSED: 1. Reset and check altitude, ss3 == 66
PASSED: 1. Reset and check altitude, ss2 == 6d
PASSED: 1. Reset and check altitude, ss1 == 3f
PASSED: 1. Reset and check altitude, ss0 == 3f

Time:            525000000
Checking outputs for 2. Check velocity
PASSED: 2. Check velocity, crash == 0
PASSED: 2. Check velocity, land == 0
PASSED: 2. Check velocity, ss7 == 3e
PASSED: 2. Check velocity, ss6 == 79
PASSED: 2. Check velocity, ss5 == 38
PASSED: 2. Check velocity, ss3 == 00
PASSED: 2. Check velocity, ss2 == 00
PASSED: 2. Check velocity, ss1 == 00
PASSED: 2. Check velocity, ss0 == 3f

Time:            925000000
Checking outputs for 3. Check gas
PASSED: 3. Check gas, crash == 0
PASSED: 3. Check gas, land == 0
PASSED: 3. Check gas, ss7 == 6f
PASSED: 3. Check gas, ss6 == 77
PASSED: 3. Check gas, ss5 == 6d
PASSED: 3. Check gas, ss3 == 00
PASSED: 3. Check gas, ss2 == 7f
PASSED: 3. Check gas, ss1 == 3f
PASSED: 3. Check gas, ss0 == 3f

Time:           1325000000
Checking outputs for 4. Check thrust
PASSED: 4. Check thrust, crash == 0
PASSED: 4. Check thrust, land == 0
PASSED: 4. Check thrust, ss7 == 78
PASSED: 4. Check thrust, ss6 == 76
PASSED: 4. Check thrust, ss5 == 50
PASSED: 4. Check thrust, ss3 == 00
PASSED: 4. Check thrust, ss2 == 00
PASSED: 4. Check thrust, ss1 == 00
PASSED: 4. Check thrust, ss0 == 6d

Time:           4175000000
Checking outputs for 5. Set thrust to 0
PASSED: 5. Set thrust to 0, crash == 0
PASSED: 5. Set thrust to 0, land == 0
PASSED: 5. Set thrust to 0, ss7 == 78
PASSED: 5. Set thrust to 0, ss6 == 76
PASSED: 5. Set thrust to 0, ss5 == 50
PASSED: 5. Set thrust to 0, ss3 == 00
PASSED: 5. Set thrust to 0, ss2 == 00
PASSED: 5. Set thrust to 0, ss1 == 00
PASSED: 5. Set thrust to 0, ss0 == 3f

Time:           4475000000
Checking outputs for 6. Switch to alt
PASSED: 6. Switch to alt, crash == 0
PASSED: 6. Switch to alt, land == 0
PASSED: 6. Switch to alt, ss7 == 77
PASSED: 6. Switch to alt, ss6 == 38
PASSED: 6. Switch to alt, ss5 == 78
PASSED: 6. Switch to alt, ss3 == 66
PASSED: 6. Switch to alt, ss2 == 6d
PASSED: 6. Switch to alt, ss1 == 3f
PASSED: 6. Switch to alt, ss0 == 3f

Time:          14775000000
Checking outputs for 7. Set thrust to 9, show velocity
PASSED: 7. Set thrust to 9, show velocity, crash == 0
PASSED: 7. Set thrust to 9, show velocity, land == 0
PASSED: 7. Set thrust to 9, show velocity, ss7 == 3e
PASSED: 7. Set thrust to 9, show velocity, ss6 == 79
PASSED: 7. Set thrust to 9, show velocity, ss5 == 38
PASSED: 7. Set thrust to 9, show velocity, ss3 == 40
PASSED: 7. Set thrust to 9, show velocity, ss2 == 00
PASSED: 7. Set thrust to 9, show velocity, ss1 == 5b
FAILED: 7. Set thrust to 9, show velocity, ss0 == 3f, expected 7d

Time:          15375000000
Checking outputs for 8. Set thrust to 5, show altitude - should land
PASSED: 8. Set thrust to 5, show altitude - should land, crash == 0
FAILED: 8. Set thrust to 5, show altitude - should land, land == 0, expected 1
PASSED: 8. Set thrust to 5, show altitude - should land, ss7 == 77
PASSED: 8. Set thrust to 5, show altitude - should land, ss6 == 38
PASSED: 8. Set thrust to 5, show altitude - should land, ss5 == 78
FAILED: 8. Set thrust to 5, show altitude - should land, ss3 == 66, expected 00
FAILED: 8. Set thrust to 5, show altitude - should land, ss2 == 66, expected 00
FAILED: 8. Set thrust to 5, show altitude - should land, ss1 == 27, expected 00
PASSED: 8. Set thrust to 5, show altitude - should land, ss0 == 3f

Time:          15575000000
Checking outputs for 9. Reset for testing crash
PASSED: 9. Reset for testing crash, crash == 0
PASSED: 9. Reset for testing crash, land == 0
PASSED: 9. Reset for testing crash, ss7 == 77
PASSED: 9. Reset for testing crash, ss6 == 38
PASSED: 9. Reset for testing crash, ss5 == 78
PASSED: 9. Reset for testing crash, ss3 == 66
PASSED: 9. Reset for testing crash, ss2 == 6d
PASSED: 9. Reset for testing crash, ss1 == 3f
PASSED: 9. Reset for testing crash, ss0 == 3f

Time:          32175000000
Checking outputs for 10. Show fuel until zero
PASSED: 10. Show fuel until zero, crash == 0
PASSED: 10. Show fuel until zero, land == 0
PASSED: 10. Show fuel until zero, ss7 == 6f
PASSED: 10. Show fuel until zero, ss6 == 77
PASSED: 10. Show fuel until zero, ss5 == 6d
PASSED: 10. Show fuel until zero, ss3 == 00
FAILED: 10. Show fuel until zero, ss2 == 27, expected 00
FAILED: 10. Show fuel until zero, ss1 == 27, expected 00
PASSED: 10. Show fuel until zero, ss0 == 3f

Time:         426975000000
Checking outputs for 11. Let lander fall until crash
FAILED: 11. Let lander fall until crash, crash == 0, expected 1
PASSED: 11. Let lander fall until crash, land == 0
PASSED: 11. Let lander fall until crash, ss7 == 77
PASSED: 11. Let lander fall until crash, ss6 == 38
PASSED: 11. Let lander fall until crash, ss5 == 78
FAILED: 11. Let lander fall until crash, ss3 == 66, expected 00
FAILED: 11. Let lander fall until crash, ss2 == 66, expected 00
FAILED: 11. Let lander fall until crash, ss1 == 27, expected 00
PASSED: 11. Let lander fall until crash, ss0 == 3f

88 out of 99 tests passed.
tb_ll.sv:406: $finish called at 427975000000 (1ns)
